Output file describing compiled parser placed in Parser.fs and Parser.fsi
------------------------
states = 
state 0:
  items:
    _startstart ->  . start

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 11
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 3
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto start: 1
    goto func_def: 2
    goto func_head: 4

state 1:
  items:
    _startstart -> start . 

  actions:
    action 'EQ' (noprec):   accept
    action 'NE' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'LE' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'GE' (noprec):   accept
    action 'PLUS' (noprec):   accept
    action 'MINUS' (noprec):   accept
    action 'ASTER' (noprec):   accept
    action 'SLASH' (noprec):   accept
    action 'MOD' (noprec):   accept
    action 'NOT' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'OR' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'LSBR' (noprec):   accept
    action 'RSBR' (noprec):   accept
    action 'LCBR' (noprec):   accept
    action 'RCBR' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'SEMICOLON' (noprec):   accept
    action 'ASSIGN' (noprec):   accept
    action 'T_BYTE' (noprec):   accept
    action 'T_ELSE' (noprec):   accept
    action 'T_FALSE' (noprec):   accept
    action 'T_IF' (noprec):   accept
    action 'T_INT' (noprec):   accept
    action 'T_PROC' (noprec):   accept
    action 'T_REF' (noprec):   accept
    action 'T_RETURN' (noprec):   accept
    action 'T_WHILE' (noprec):   accept
    action 'T_TRUE' (noprec):   accept
    action 'T_EOF' (noprec):   accept
    action 'ID' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'BYTE' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept

  immediate action:   accept
 gotos:

state 2:
  items:
    start -> func_def . 

  actions:
    action 'EQ' (noprec):   reduce start --> func_def
    action 'NE' (noprec):   reduce start --> func_def
    action 'LT' (noprec):   reduce start --> func_def
    action 'LE' (noprec):   reduce start --> func_def
    action 'GT' (noprec):   reduce start --> func_def
    action 'GE' (noprec):   reduce start --> func_def
    action 'PLUS' (noprec):   reduce start --> func_def
    action 'MINUS' (noprec):   reduce start --> func_def
    action 'ASTER' (noprec):   reduce start --> func_def
    action 'SLASH' (noprec):   reduce start --> func_def
    action 'MOD' (noprec):   reduce start --> func_def
    action 'NOT' (noprec):   reduce start --> func_def
    action 'AND' (noprec):   reduce start --> func_def
    action 'OR' (noprec):   reduce start --> func_def
    action 'LPAREN' (noprec):   reduce start --> func_def
    action 'RPAREN' (noprec):   reduce start --> func_def
    action 'LSBR' (noprec):   reduce start --> func_def
    action 'RSBR' (noprec):   reduce start --> func_def
    action 'LCBR' (noprec):   reduce start --> func_def
    action 'RCBR' (noprec):   reduce start --> func_def
    action 'COMMA' (noprec):   reduce start --> func_def
    action 'COLON' (noprec):   reduce start --> func_def
    action 'SEMICOLON' (noprec):   reduce start --> func_def
    action 'ASSIGN' (noprec):   reduce start --> func_def
    action 'T_BYTE' (noprec):   reduce start --> func_def
    action 'T_ELSE' (noprec):   reduce start --> func_def
    action 'T_FALSE' (noprec):   reduce start --> func_def
    action 'T_IF' (noprec):   reduce start --> func_def
    action 'T_INT' (noprec):   reduce start --> func_def
    action 'T_PROC' (noprec):   reduce start --> func_def
    action 'T_REF' (noprec):   reduce start --> func_def
    action 'T_RETURN' (noprec):   reduce start --> func_def
    action 'T_WHILE' (noprec):   reduce start --> func_def
    action 'T_TRUE' (noprec):   reduce start --> func_def
    action 'T_EOF' (noprec):   reduce start --> func_def
    action 'ID' (noprec):   reduce start --> func_def
    action 'STRING' (noprec):   reduce start --> func_def
    action 'INT' (noprec):   reduce start --> func_def
    action 'BYTE' (noprec):   reduce start --> func_def
    action 'error' (noprec):   reduce start --> func_def
    action '#' (noprec):   reduce start --> func_def
    action '$$' (noprec):   reduce start --> func_def

  immediate action:   reduce start --> func_def
 gotos:

state 3:
  items:
    start -> 'error' . 

  actions:
    action 'EQ' (noprec):   reduce start --> 'error'
    action 'NE' (noprec):   reduce start --> 'error'
    action 'LT' (noprec):   reduce start --> 'error'
    action 'LE' (noprec):   reduce start --> 'error'
    action 'GT' (noprec):   reduce start --> 'error'
    action 'GE' (noprec):   reduce start --> 'error'
    action 'PLUS' (noprec):   reduce start --> 'error'
    action 'MINUS' (noprec):   reduce start --> 'error'
    action 'ASTER' (noprec):   reduce start --> 'error'
    action 'SLASH' (noprec):   reduce start --> 'error'
    action 'MOD' (noprec):   reduce start --> 'error'
    action 'NOT' (noprec):   reduce start --> 'error'
    action 'AND' (noprec):   reduce start --> 'error'
    action 'OR' (noprec):   reduce start --> 'error'
    action 'LPAREN' (noprec):   reduce start --> 'error'
    action 'RPAREN' (noprec):   reduce start --> 'error'
    action 'LSBR' (noprec):   reduce start --> 'error'
    action 'RSBR' (noprec):   reduce start --> 'error'
    action 'LCBR' (noprec):   reduce start --> 'error'
    action 'RCBR' (noprec):   reduce start --> 'error'
    action 'COMMA' (noprec):   reduce start --> 'error'
    action 'COLON' (noprec):   reduce start --> 'error'
    action 'SEMICOLON' (noprec):   reduce start --> 'error'
    action 'ASSIGN' (noprec):   reduce start --> 'error'
    action 'T_BYTE' (noprec):   reduce start --> 'error'
    action 'T_ELSE' (noprec):   reduce start --> 'error'
    action 'T_FALSE' (noprec):   reduce start --> 'error'
    action 'T_IF' (noprec):   reduce start --> 'error'
    action 'T_INT' (noprec):   reduce start --> 'error'
    action 'T_PROC' (noprec):   reduce start --> 'error'
    action 'T_REF' (noprec):   reduce start --> 'error'
    action 'T_RETURN' (noprec):   reduce start --> 'error'
    action 'T_WHILE' (noprec):   reduce start --> 'error'
    action 'T_TRUE' (noprec):   reduce start --> 'error'
    action 'T_EOF' (noprec):   reduce start --> 'error'
    action 'ID' (noprec):   reduce start --> 'error'
    action 'STRING' (noprec):   reduce start --> 'error'
    action 'INT' (noprec):   reduce start --> 'error'
    action 'BYTE' (noprec):   reduce start --> 'error'
    action 'error' (noprec):   reduce start --> 'error'
    action '#' (noprec):   reduce start --> 'error'
    action '$$' (noprec):   reduce start --> 'error'

  immediate action:   reduce start --> 'error'
 gotos:

state 4:
  items:
    func_def -> func_head . func_params compound_stmt
    func_def -> func_head . func_params local_def_list compound_stmt
    func_def -> func_head . func_params 'error'
    func_def -> func_head . func_params local_def_list 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 14
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_params: 5

state 5:
  items:
    func_def -> func_head func_params . compound_stmt
    func_def -> func_head func_params . local_def_list compound_stmt
    func_def -> func_head func_params . 'error'
    func_def -> func_head func_params . local_def_list 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 12
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 9
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 39
    goto local_def_list: 7
    goto var_def: 38
    goto compound_stmt: 6

state 6:
  items:
    func_def -> func_head func_params compound_stmt . 

  actions:
    action 'EQ' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'NE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'LT' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'LE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'GT' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'GE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'PLUS' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'MINUS' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'ASTER' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'SLASH' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'MOD' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'NOT' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'AND' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'OR' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'LPAREN' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'RPAREN' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'LSBR' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'RSBR' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'LCBR' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'RCBR' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'COMMA' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'COLON' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'SEMICOLON' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'ASSIGN' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_BYTE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_ELSE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_FALSE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_IF' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_INT' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_PROC' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_REF' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_RETURN' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_WHILE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_TRUE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'T_EOF' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'ID' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'STRING' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'INT' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'BYTE' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action 'error' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action '#' (noprec):   reduce func_def --> func_head func_params compound_stmt
    action '$$' (noprec):   reduce func_def --> func_head func_params compound_stmt

  immediate action:   reduce func_def --> func_head func_params compound_stmt
 gotos:

state 7:
  items:
    func_def -> func_head func_params local_def_list . compound_stmt
    func_def -> func_head func_params local_def_list . 'error'
    local_def_list -> local_def_list . local_def

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 12
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 10
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 40
    goto var_def: 38
    goto compound_stmt: 8

state 8:
  items:
    func_def -> func_head func_params local_def_list compound_stmt . 

  actions:
    action 'EQ' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'NE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'LT' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'LE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'GT' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'GE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'PLUS' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'MINUS' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'ASTER' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'SLASH' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'MOD' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'NOT' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'AND' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'OR' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'LPAREN' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'RPAREN' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'LSBR' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'RSBR' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'LCBR' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'RCBR' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'COMMA' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'COLON' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'SEMICOLON' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'ASSIGN' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_BYTE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_ELSE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_FALSE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_IF' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_INT' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_PROC' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_REF' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_RETURN' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_WHILE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_TRUE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'T_EOF' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'ID' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'STRING' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'INT' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'BYTE' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action 'error' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action '#' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt
    action '$$' (noprec):   reduce func_def --> func_head func_params local_def_list compound_stmt

  immediate action:   reduce func_def --> func_head func_params local_def_list compound_stmt
 gotos:

state 9:
  items:
    func_def -> func_head func_params 'error' . 

  actions:
    action 'EQ' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'NE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'LT' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'LE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'GT' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'GE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'PLUS' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'MINUS' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'ASTER' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'SLASH' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'MOD' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'NOT' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'AND' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'OR' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'LPAREN' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'RPAREN' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'LSBR' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'RSBR' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'LCBR' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'RCBR' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'COMMA' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'COLON' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'SEMICOLON' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'ASSIGN' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_BYTE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_ELSE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_FALSE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_IF' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_INT' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_PROC' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_REF' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_RETURN' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_WHILE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_TRUE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'T_EOF' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'ID' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'STRING' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'INT' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'BYTE' (noprec):   reduce func_def --> func_head func_params 'error'
    action 'error' (noprec):   reduce func_def --> func_head func_params 'error'
    action '#' (noprec):   reduce func_def --> func_head func_params 'error'
    action '$$' (noprec):   reduce func_def --> func_head func_params 'error'

  immediate action:   reduce func_def --> func_head func_params 'error'
 gotos:

state 10:
  items:
    func_def -> func_head func_params local_def_list 'error' . 

  actions:
    action 'EQ' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'NE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'LT' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'LE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'GT' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'GE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'PLUS' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'MINUS' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'ASTER' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'SLASH' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'MOD' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'NOT' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'AND' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'OR' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'LPAREN' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'RPAREN' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'LSBR' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'RSBR' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'LCBR' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'RCBR' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'COMMA' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'COLON' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'SEMICOLON' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'ASSIGN' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_BYTE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_ELSE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_FALSE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_IF' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_INT' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_PROC' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_REF' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_RETURN' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_WHILE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_TRUE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'T_EOF' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'ID' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'STRING' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'INT' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'BYTE' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action 'error' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action '#' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'
    action '$$' (noprec):   reduce func_def --> func_head func_params local_def_list 'error'

  immediate action:   reduce func_def --> func_head func_params local_def_list 'error'
 gotos:

state 11:
  items:
    func_head -> 'ID' . 

  actions:
    action 'EQ' (noprec):   reduce func_head --> 'ID'
    action 'NE' (noprec):   reduce func_head --> 'ID'
    action 'LT' (noprec):   reduce func_head --> 'ID'
    action 'LE' (noprec):   reduce func_head --> 'ID'
    action 'GT' (noprec):   reduce func_head --> 'ID'
    action 'GE' (noprec):   reduce func_head --> 'ID'
    action 'PLUS' (noprec):   reduce func_head --> 'ID'
    action 'MINUS' (noprec):   reduce func_head --> 'ID'
    action 'ASTER' (noprec):   reduce func_head --> 'ID'
    action 'SLASH' (noprec):   reduce func_head --> 'ID'
    action 'MOD' (noprec):   reduce func_head --> 'ID'
    action 'NOT' (noprec):   reduce func_head --> 'ID'
    action 'AND' (noprec):   reduce func_head --> 'ID'
    action 'OR' (noprec):   reduce func_head --> 'ID'
    action 'LPAREN' (noprec):   reduce func_head --> 'ID'
    action 'RPAREN' (noprec):   reduce func_head --> 'ID'
    action 'LSBR' (noprec):   reduce func_head --> 'ID'
    action 'RSBR' (noprec):   reduce func_head --> 'ID'
    action 'LCBR' (noprec):   reduce func_head --> 'ID'
    action 'RCBR' (noprec):   reduce func_head --> 'ID'
    action 'COMMA' (noprec):   reduce func_head --> 'ID'
    action 'COLON' (noprec):   reduce func_head --> 'ID'
    action 'SEMICOLON' (noprec):   reduce func_head --> 'ID'
    action 'ASSIGN' (noprec):   reduce func_head --> 'ID'
    action 'T_BYTE' (noprec):   reduce func_head --> 'ID'
    action 'T_ELSE' (noprec):   reduce func_head --> 'ID'
    action 'T_FALSE' (noprec):   reduce func_head --> 'ID'
    action 'T_IF' (noprec):   reduce func_head --> 'ID'
    action 'T_INT' (noprec):   reduce func_head --> 'ID'
    action 'T_PROC' (noprec):   reduce func_head --> 'ID'
    action 'T_REF' (noprec):   reduce func_head --> 'ID'
    action 'T_RETURN' (noprec):   reduce func_head --> 'ID'
    action 'T_WHILE' (noprec):   reduce func_head --> 'ID'
    action 'T_TRUE' (noprec):   reduce func_head --> 'ID'
    action 'T_EOF' (noprec):   reduce func_head --> 'ID'
    action 'ID' (noprec):   reduce func_head --> 'ID'
    action 'STRING' (noprec):   reduce func_head --> 'ID'
    action 'INT' (noprec):   reduce func_head --> 'ID'
    action 'BYTE' (noprec):   reduce func_head --> 'ID'
    action 'error' (noprec):   reduce func_head --> 'ID'
    action '#' (noprec):   reduce func_head --> 'ID'
    action '$$' (noprec):   reduce func_head --> 'ID'

  immediate action:   reduce func_head --> 'ID'
 gotos:

state 12:
  items:
    func_head -> 'ID' . 
    var_def -> 'ID' . 'COLON' data_type 'SEMICOLON'
    var_def -> 'ID' . 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    var_def -> 'ID' . 'COLON' data_type 'error' 'SEMICOLON'
    var_def -> 'ID' . 'COLON' 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   reduce func_head --> 'ID'
    action 'NE' (noprec):   reduce func_head --> 'ID'
    action 'LT' (noprec):   reduce func_head --> 'ID'
    action 'LE' (noprec):   reduce func_head --> 'ID'
    action 'GT' (noprec):   reduce func_head --> 'ID'
    action 'GE' (noprec):   reduce func_head --> 'ID'
    action 'PLUS' (noprec):   reduce func_head --> 'ID'
    action 'MINUS' (noprec):   reduce func_head --> 'ID'
    action 'ASTER' (noprec):   reduce func_head --> 'ID'
    action 'SLASH' (noprec):   reduce func_head --> 'ID'
    action 'MOD' (noprec):   reduce func_head --> 'ID'
    action 'NOT' (noprec):   reduce func_head --> 'ID'
    action 'AND' (noprec):   reduce func_head --> 'ID'
    action 'OR' (noprec):   reduce func_head --> 'ID'
    action 'LPAREN' (noprec):   reduce func_head --> 'ID'
    action 'RPAREN' (noprec):   reduce func_head --> 'ID'
    action 'LSBR' (noprec):   reduce func_head --> 'ID'
    action 'RSBR' (noprec):   reduce func_head --> 'ID'
    action 'LCBR' (noprec):   reduce func_head --> 'ID'
    action 'RCBR' (noprec):   reduce func_head --> 'ID'
    action 'COMMA' (noprec):   reduce func_head --> 'ID'
    action 'COLON' (noprec):   shift 41
    action 'SEMICOLON' (noprec):   reduce func_head --> 'ID'
    action 'ASSIGN' (noprec):   reduce func_head --> 'ID'
    action 'T_BYTE' (noprec):   reduce func_head --> 'ID'
    action 'T_ELSE' (noprec):   reduce func_head --> 'ID'
    action 'T_FALSE' (noprec):   reduce func_head --> 'ID'
    action 'T_IF' (noprec):   reduce func_head --> 'ID'
    action 'T_INT' (noprec):   reduce func_head --> 'ID'
    action 'T_PROC' (noprec):   reduce func_head --> 'ID'
    action 'T_REF' (noprec):   reduce func_head --> 'ID'
    action 'T_RETURN' (noprec):   reduce func_head --> 'ID'
    action 'T_WHILE' (noprec):   reduce func_head --> 'ID'
    action 'T_TRUE' (noprec):   reduce func_head --> 'ID'
    action 'T_EOF' (noprec):   reduce func_head --> 'ID'
    action 'ID' (noprec):   reduce func_head --> 'ID'
    action 'STRING' (noprec):   reduce func_head --> 'ID'
    action 'INT' (noprec):   reduce func_head --> 'ID'
    action 'BYTE' (noprec):   reduce func_head --> 'ID'
    action 'error' (noprec):   reduce func_head --> 'ID'
    action '#' (noprec):   reduce func_head --> 'ID'
    action '$$' (noprec):   reduce func_head --> 'ID'

  immediate action: <none>
 gotos:

state 13:
  items:
    func_head -> 'ID' . 
    var_def -> 'ID' . 'COLON' data_type 'SEMICOLON'
    var_def -> 'ID' . 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    var_def -> 'ID' . 'COLON' data_type 'error' 'SEMICOLON'
    var_def -> 'ID' . 'COLON' 'error' 'SEMICOLON'
    func_call -> 'ID' . 'LPAREN' 'RPAREN'
    func_call -> 'ID' . 'LPAREN' expr_list 'RPAREN'
    l_value -> 'ID' . 
    l_value -> 'ID' . 'LSBR' expr 'RSBR'

  actions:
    action 'EQ' (noprec):   reduce func_head --> 'ID'
    action 'NE' (noprec):   reduce func_head --> 'ID'
    action 'LT' (noprec):   reduce func_head --> 'ID'
    action 'LE' (noprec):   reduce func_head --> 'ID'
    action 'GT' (noprec):   reduce func_head --> 'ID'
    action 'GE' (noprec):   reduce func_head --> 'ID'
    action 'PLUS' (noprec):   reduce func_head --> 'ID'
    action 'MINUS' (noprec):   reduce func_head --> 'ID'
    action 'ASTER' (noprec):   reduce func_head --> 'ID'
    action 'SLASH' (noprec):   reduce func_head --> 'ID'
    action 'MOD' (noprec):   reduce func_head --> 'ID'
    action 'NOT' (noprec):   reduce func_head --> 'ID'
    action 'AND' (noprec):   reduce func_head --> 'ID'
    action 'OR' (noprec):   reduce func_head --> 'ID'
    action 'LPAREN' (noprec):   shift 101
    action 'RPAREN' (noprec):   reduce func_head --> 'ID'
    action 'LSBR' (noprec):   shift 156
    action 'RSBR' (noprec):   reduce func_head --> 'ID'
    action 'LCBR' (noprec):   reduce func_head --> 'ID'
    action 'RCBR' (noprec):   reduce func_head --> 'ID'
    action 'COMMA' (noprec):   reduce func_head --> 'ID'
    action 'COLON' (noprec):   shift 41
    action 'SEMICOLON' (noprec):   reduce func_head --> 'ID'
    action 'ASSIGN' (noprec):   reduce l_value --> 'ID'
    action 'T_BYTE' (noprec):   reduce func_head --> 'ID'
    action 'T_ELSE' (noprec):   reduce func_head --> 'ID'
    action 'T_FALSE' (noprec):   reduce func_head --> 'ID'
    action 'T_IF' (noprec):   reduce func_head --> 'ID'
    action 'T_INT' (noprec):   reduce func_head --> 'ID'
    action 'T_PROC' (noprec):   reduce func_head --> 'ID'
    action 'T_REF' (noprec):   reduce func_head --> 'ID'
    action 'T_RETURN' (noprec):   reduce func_head --> 'ID'
    action 'T_WHILE' (noprec):   reduce func_head --> 'ID'
    action 'T_TRUE' (noprec):   reduce func_head --> 'ID'
    action 'T_EOF' (noprec):   reduce func_head --> 'ID'
    action 'ID' (noprec):   reduce func_head --> 'ID'
    action 'STRING' (noprec):   reduce func_head --> 'ID'
    action 'INT' (noprec):   reduce func_head --> 'ID'
    action 'BYTE' (noprec):   reduce func_head --> 'ID'
    action 'error' (noprec):   reduce l_value --> 'ID'
    action '#' (noprec):   reduce func_head --> 'ID'
    action '$$' (noprec):   reduce func_head --> 'ID'

  immediate action: <none>
 gotos:

state 14:
  items:
    func_params -> 'LPAREN' . 'RPAREN' 'COLON' r_type
    func_params -> 'LPAREN' . fpar_list 'RPAREN' 'COLON' r_type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 15
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 25
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto fpar_list: 18
    goto fpar_def: 22

state 15:
  items:
    func_params -> 'LPAREN' 'RPAREN' . 'COLON' r_type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 16
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 16:
  items:
    func_params -> 'LPAREN' 'RPAREN' 'COLON' . r_type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   shift 31
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   shift 30
    action 'T_PROC' (noprec):   shift 36
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto data_type: 35
    goto r_type: 17

state 17:
  items:
    func_params -> 'LPAREN' 'RPAREN' 'COLON' r_type . 

  actions:
    action 'EQ' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'NE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'LT' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'LE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'GT' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'GE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'PLUS' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'MINUS' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'ASTER' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'SLASH' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'MOD' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'NOT' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'AND' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'OR' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'LPAREN' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'RPAREN' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'LSBR' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'RSBR' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'LCBR' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'RCBR' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'COMMA' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'COLON' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'SEMICOLON' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'ASSIGN' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_BYTE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_ELSE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_FALSE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_IF' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_INT' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_PROC' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_REF' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_RETURN' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_WHILE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_TRUE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'T_EOF' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'ID' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'STRING' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'INT' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'BYTE' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action 'error' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action '#' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
    action '$$' (noprec):   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type

  immediate action:   reduce func_params --> 'LPAREN' 'RPAREN' 'COLON' r_type
 gotos:

state 18:
  items:
    func_params -> 'LPAREN' fpar_list . 'RPAREN' 'COLON' r_type
    fpar_list -> fpar_list . 'COMMA' fpar_def

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 19
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   shift 23
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 19:
  items:
    func_params -> 'LPAREN' fpar_list 'RPAREN' . 'COLON' r_type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 20
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 20:
  items:
    func_params -> 'LPAREN' fpar_list 'RPAREN' 'COLON' . r_type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   shift 31
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   shift 30
    action 'T_PROC' (noprec):   shift 36
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto data_type: 35
    goto r_type: 21

state 21:
  items:
    func_params -> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type . 

  actions:
    action 'EQ' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'NE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'LT' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'LE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'GT' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'GE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'PLUS' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'MINUS' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'ASTER' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'SLASH' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'MOD' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'NOT' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'AND' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'OR' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'LPAREN' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'RPAREN' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'LSBR' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'RSBR' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'LCBR' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'RCBR' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'COMMA' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'COLON' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'SEMICOLON' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'ASSIGN' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_BYTE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_ELSE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_FALSE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_IF' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_INT' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_PROC' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_REF' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_RETURN' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_WHILE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_TRUE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'T_EOF' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'ID' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'STRING' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'INT' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'BYTE' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action 'error' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action '#' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
    action '$$' (noprec):   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type

  immediate action:   reduce func_params --> 'LPAREN' fpar_list 'RPAREN' 'COLON' r_type
 gotos:

state 22:
  items:
    fpar_list -> fpar_def . 

  actions:
    action 'EQ' (noprec):   reduce fpar_list --> fpar_def
    action 'NE' (noprec):   reduce fpar_list --> fpar_def
    action 'LT' (noprec):   reduce fpar_list --> fpar_def
    action 'LE' (noprec):   reduce fpar_list --> fpar_def
    action 'GT' (noprec):   reduce fpar_list --> fpar_def
    action 'GE' (noprec):   reduce fpar_list --> fpar_def
    action 'PLUS' (noprec):   reduce fpar_list --> fpar_def
    action 'MINUS' (noprec):   reduce fpar_list --> fpar_def
    action 'ASTER' (noprec):   reduce fpar_list --> fpar_def
    action 'SLASH' (noprec):   reduce fpar_list --> fpar_def
    action 'MOD' (noprec):   reduce fpar_list --> fpar_def
    action 'NOT' (noprec):   reduce fpar_list --> fpar_def
    action 'AND' (noprec):   reduce fpar_list --> fpar_def
    action 'OR' (noprec):   reduce fpar_list --> fpar_def
    action 'LPAREN' (noprec):   reduce fpar_list --> fpar_def
    action 'RPAREN' (noprec):   reduce fpar_list --> fpar_def
    action 'LSBR' (noprec):   reduce fpar_list --> fpar_def
    action 'RSBR' (noprec):   reduce fpar_list --> fpar_def
    action 'LCBR' (noprec):   reduce fpar_list --> fpar_def
    action 'RCBR' (noprec):   reduce fpar_list --> fpar_def
    action 'COMMA' (noprec):   reduce fpar_list --> fpar_def
    action 'COLON' (noprec):   reduce fpar_list --> fpar_def
    action 'SEMICOLON' (noprec):   reduce fpar_list --> fpar_def
    action 'ASSIGN' (noprec):   reduce fpar_list --> fpar_def
    action 'T_BYTE' (noprec):   reduce fpar_list --> fpar_def
    action 'T_ELSE' (noprec):   reduce fpar_list --> fpar_def
    action 'T_FALSE' (noprec):   reduce fpar_list --> fpar_def
    action 'T_IF' (noprec):   reduce fpar_list --> fpar_def
    action 'T_INT' (noprec):   reduce fpar_list --> fpar_def
    action 'T_PROC' (noprec):   reduce fpar_list --> fpar_def
    action 'T_REF' (noprec):   reduce fpar_list --> fpar_def
    action 'T_RETURN' (noprec):   reduce fpar_list --> fpar_def
    action 'T_WHILE' (noprec):   reduce fpar_list --> fpar_def
    action 'T_TRUE' (noprec):   reduce fpar_list --> fpar_def
    action 'T_EOF' (noprec):   reduce fpar_list --> fpar_def
    action 'ID' (noprec):   reduce fpar_list --> fpar_def
    action 'STRING' (noprec):   reduce fpar_list --> fpar_def
    action 'INT' (noprec):   reduce fpar_list --> fpar_def
    action 'BYTE' (noprec):   reduce fpar_list --> fpar_def
    action 'error' (noprec):   reduce fpar_list --> fpar_def
    action '#' (noprec):   reduce fpar_list --> fpar_def
    action '$$' (noprec):   reduce fpar_list --> fpar_def

  immediate action:   reduce fpar_list --> fpar_def
 gotos:

state 23:
  items:
    fpar_list -> fpar_list 'COMMA' . fpar_def

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 25
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto fpar_def: 24

state 24:
  items:
    fpar_list -> fpar_list 'COMMA' fpar_def . 

  actions:
    action 'EQ' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'NE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'LT' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'LE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'GT' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'GE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'PLUS' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'MINUS' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'ASTER' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'SLASH' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'MOD' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'NOT' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'AND' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'OR' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'LPAREN' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'RPAREN' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'LSBR' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'RSBR' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'LCBR' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'RCBR' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'COMMA' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'COLON' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'SEMICOLON' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'ASSIGN' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_BYTE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_ELSE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_FALSE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_IF' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_INT' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_PROC' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_REF' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_RETURN' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_WHILE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_TRUE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'T_EOF' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'ID' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'STRING' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'INT' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'BYTE' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action 'error' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action '#' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def
    action '$$' (noprec):   reduce fpar_list --> fpar_list 'COMMA' fpar_def

  immediate action:   reduce fpar_list --> fpar_list 'COMMA' fpar_def
 gotos:

state 25:
  items:
    fpar_def -> 'ID' . 'COLON' data_type
    fpar_def -> 'ID' . 'COLON' 'T_REF' type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 26
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 26:
  items:
    fpar_def -> 'ID' 'COLON' . data_type
    fpar_def -> 'ID' 'COLON' . 'T_REF' type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   shift 31
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   shift 30
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   shift 28
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto data_type: 27

state 27:
  items:
    fpar_def -> 'ID' 'COLON' data_type . 

  actions:
    action 'EQ' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'NE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'LT' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'LE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'GT' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'GE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'PLUS' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'MINUS' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'ASTER' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'SLASH' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'MOD' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'NOT' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'AND' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'OR' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'LPAREN' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'RPAREN' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'LSBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'RSBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'LCBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'RCBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'COMMA' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'COLON' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'SEMICOLON' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'ASSIGN' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_BYTE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_ELSE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_FALSE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_IF' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_INT' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_PROC' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_REF' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_RETURN' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_WHILE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_TRUE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'T_EOF' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'ID' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'STRING' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'INT' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'BYTE' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action 'error' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action '#' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type
    action '$$' (noprec):   reduce fpar_def --> 'ID' 'COLON' data_type

  immediate action:   reduce fpar_def --> 'ID' 'COLON' data_type
 gotos:

state 28:
  items:
    fpar_def -> 'ID' 'COLON' 'T_REF' . type

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   shift 31
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   shift 30
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto data_type: 32
    goto type: 29

state 29:
  items:
    fpar_def -> 'ID' 'COLON' 'T_REF' type . 

  actions:
    action 'EQ' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'NE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'LT' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'LE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'GT' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'GE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'PLUS' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'MINUS' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'ASTER' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'SLASH' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'MOD' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'NOT' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'AND' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'OR' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'LPAREN' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'RPAREN' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'LSBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'RSBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'LCBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'RCBR' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'COMMA' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'COLON' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'SEMICOLON' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'ASSIGN' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_BYTE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_ELSE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_FALSE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_IF' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_INT' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_PROC' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_REF' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_RETURN' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_WHILE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_TRUE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'T_EOF' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'ID' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'STRING' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'INT' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'BYTE' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action 'error' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action '#' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
    action '$$' (noprec):   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type

  immediate action:   reduce fpar_def --> 'ID' 'COLON' 'T_REF' type
 gotos:

state 30:
  items:
    data_type -> 'T_INT' . 

  actions:
    action 'EQ' (noprec):   reduce data_type --> 'T_INT'
    action 'NE' (noprec):   reduce data_type --> 'T_INT'
    action 'LT' (noprec):   reduce data_type --> 'T_INT'
    action 'LE' (noprec):   reduce data_type --> 'T_INT'
    action 'GT' (noprec):   reduce data_type --> 'T_INT'
    action 'GE' (noprec):   reduce data_type --> 'T_INT'
    action 'PLUS' (noprec):   reduce data_type --> 'T_INT'
    action 'MINUS' (noprec):   reduce data_type --> 'T_INT'
    action 'ASTER' (noprec):   reduce data_type --> 'T_INT'
    action 'SLASH' (noprec):   reduce data_type --> 'T_INT'
    action 'MOD' (noprec):   reduce data_type --> 'T_INT'
    action 'NOT' (noprec):   reduce data_type --> 'T_INT'
    action 'AND' (noprec):   reduce data_type --> 'T_INT'
    action 'OR' (noprec):   reduce data_type --> 'T_INT'
    action 'LPAREN' (noprec):   reduce data_type --> 'T_INT'
    action 'RPAREN' (noprec):   reduce data_type --> 'T_INT'
    action 'LSBR' (noprec):   reduce data_type --> 'T_INT'
    action 'RSBR' (noprec):   reduce data_type --> 'T_INT'
    action 'LCBR' (noprec):   reduce data_type --> 'T_INT'
    action 'RCBR' (noprec):   reduce data_type --> 'T_INT'
    action 'COMMA' (noprec):   reduce data_type --> 'T_INT'
    action 'COLON' (noprec):   reduce data_type --> 'T_INT'
    action 'SEMICOLON' (noprec):   reduce data_type --> 'T_INT'
    action 'ASSIGN' (noprec):   reduce data_type --> 'T_INT'
    action 'T_BYTE' (noprec):   reduce data_type --> 'T_INT'
    action 'T_ELSE' (noprec):   reduce data_type --> 'T_INT'
    action 'T_FALSE' (noprec):   reduce data_type --> 'T_INT'
    action 'T_IF' (noprec):   reduce data_type --> 'T_INT'
    action 'T_INT' (noprec):   reduce data_type --> 'T_INT'
    action 'T_PROC' (noprec):   reduce data_type --> 'T_INT'
    action 'T_REF' (noprec):   reduce data_type --> 'T_INT'
    action 'T_RETURN' (noprec):   reduce data_type --> 'T_INT'
    action 'T_WHILE' (noprec):   reduce data_type --> 'T_INT'
    action 'T_TRUE' (noprec):   reduce data_type --> 'T_INT'
    action 'T_EOF' (noprec):   reduce data_type --> 'T_INT'
    action 'ID' (noprec):   reduce data_type --> 'T_INT'
    action 'STRING' (noprec):   reduce data_type --> 'T_INT'
    action 'INT' (noprec):   reduce data_type --> 'T_INT'
    action 'BYTE' (noprec):   reduce data_type --> 'T_INT'
    action 'error' (noprec):   reduce data_type --> 'T_INT'
    action '#' (noprec):   reduce data_type --> 'T_INT'
    action '$$' (noprec):   reduce data_type --> 'T_INT'

  immediate action:   reduce data_type --> 'T_INT'
 gotos:

state 31:
  items:
    data_type -> 'T_BYTE' . 

  actions:
    action 'EQ' (noprec):   reduce data_type --> 'T_BYTE'
    action 'NE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'LT' (noprec):   reduce data_type --> 'T_BYTE'
    action 'LE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'GT' (noprec):   reduce data_type --> 'T_BYTE'
    action 'GE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'PLUS' (noprec):   reduce data_type --> 'T_BYTE'
    action 'MINUS' (noprec):   reduce data_type --> 'T_BYTE'
    action 'ASTER' (noprec):   reduce data_type --> 'T_BYTE'
    action 'SLASH' (noprec):   reduce data_type --> 'T_BYTE'
    action 'MOD' (noprec):   reduce data_type --> 'T_BYTE'
    action 'NOT' (noprec):   reduce data_type --> 'T_BYTE'
    action 'AND' (noprec):   reduce data_type --> 'T_BYTE'
    action 'OR' (noprec):   reduce data_type --> 'T_BYTE'
    action 'LPAREN' (noprec):   reduce data_type --> 'T_BYTE'
    action 'RPAREN' (noprec):   reduce data_type --> 'T_BYTE'
    action 'LSBR' (noprec):   reduce data_type --> 'T_BYTE'
    action 'RSBR' (noprec):   reduce data_type --> 'T_BYTE'
    action 'LCBR' (noprec):   reduce data_type --> 'T_BYTE'
    action 'RCBR' (noprec):   reduce data_type --> 'T_BYTE'
    action 'COMMA' (noprec):   reduce data_type --> 'T_BYTE'
    action 'COLON' (noprec):   reduce data_type --> 'T_BYTE'
    action 'SEMICOLON' (noprec):   reduce data_type --> 'T_BYTE'
    action 'ASSIGN' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_BYTE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_ELSE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_FALSE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_IF' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_INT' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_PROC' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_REF' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_RETURN' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_WHILE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_TRUE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'T_EOF' (noprec):   reduce data_type --> 'T_BYTE'
    action 'ID' (noprec):   reduce data_type --> 'T_BYTE'
    action 'STRING' (noprec):   reduce data_type --> 'T_BYTE'
    action 'INT' (noprec):   reduce data_type --> 'T_BYTE'
    action 'BYTE' (noprec):   reduce data_type --> 'T_BYTE'
    action 'error' (noprec):   reduce data_type --> 'T_BYTE'
    action '#' (noprec):   reduce data_type --> 'T_BYTE'
    action '$$' (noprec):   reduce data_type --> 'T_BYTE'

  immediate action:   reduce data_type --> 'T_BYTE'
 gotos:

state 32:
  items:
    type -> data_type . 
    type -> data_type . 'LSBR' 'RSBR'

  actions:
    action 'EQ' (noprec):   reduce type --> data_type
    action 'NE' (noprec):   reduce type --> data_type
    action 'LT' (noprec):   reduce type --> data_type
    action 'LE' (noprec):   reduce type --> data_type
    action 'GT' (noprec):   reduce type --> data_type
    action 'GE' (noprec):   reduce type --> data_type
    action 'PLUS' (noprec):   reduce type --> data_type
    action 'MINUS' (noprec):   reduce type --> data_type
    action 'ASTER' (noprec):   reduce type --> data_type
    action 'SLASH' (noprec):   reduce type --> data_type
    action 'MOD' (noprec):   reduce type --> data_type
    action 'NOT' (noprec):   reduce type --> data_type
    action 'AND' (noprec):   reduce type --> data_type
    action 'OR' (noprec):   reduce type --> data_type
    action 'LPAREN' (noprec):   reduce type --> data_type
    action 'RPAREN' (noprec):   reduce type --> data_type
    action 'LSBR' (noprec):   shift 33
    action 'RSBR' (noprec):   reduce type --> data_type
    action 'LCBR' (noprec):   reduce type --> data_type
    action 'RCBR' (noprec):   reduce type --> data_type
    action 'COMMA' (noprec):   reduce type --> data_type
    action 'COLON' (noprec):   reduce type --> data_type
    action 'SEMICOLON' (noprec):   reduce type --> data_type
    action 'ASSIGN' (noprec):   reduce type --> data_type
    action 'T_BYTE' (noprec):   reduce type --> data_type
    action 'T_ELSE' (noprec):   reduce type --> data_type
    action 'T_FALSE' (noprec):   reduce type --> data_type
    action 'T_IF' (noprec):   reduce type --> data_type
    action 'T_INT' (noprec):   reduce type --> data_type
    action 'T_PROC' (noprec):   reduce type --> data_type
    action 'T_REF' (noprec):   reduce type --> data_type
    action 'T_RETURN' (noprec):   reduce type --> data_type
    action 'T_WHILE' (noprec):   reduce type --> data_type
    action 'T_TRUE' (noprec):   reduce type --> data_type
    action 'T_EOF' (noprec):   reduce type --> data_type
    action 'ID' (noprec):   reduce type --> data_type
    action 'STRING' (noprec):   reduce type --> data_type
    action 'INT' (noprec):   reduce type --> data_type
    action 'BYTE' (noprec):   reduce type --> data_type
    action 'error' (noprec):   reduce type --> data_type
    action '#' (noprec):   reduce type --> data_type
    action '$$' (noprec):   reduce type --> data_type

  immediate action: <none>
 gotos:

state 33:
  items:
    type -> data_type 'LSBR' . 'RSBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   shift 34
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 34:
  items:
    type -> data_type 'LSBR' 'RSBR' . 

  actions:
    action 'EQ' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'NE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'LT' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'LE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'GT' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'GE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'PLUS' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'MINUS' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'ASTER' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'SLASH' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'MOD' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'NOT' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'AND' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'OR' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'LPAREN' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'RPAREN' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'LSBR' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'RSBR' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'LCBR' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'RCBR' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'COMMA' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'COLON' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'SEMICOLON' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'ASSIGN' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_BYTE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_ELSE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_FALSE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_IF' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_INT' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_PROC' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_REF' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_RETURN' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_WHILE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_TRUE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'T_EOF' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'ID' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'STRING' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'INT' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'BYTE' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action 'error' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action '#' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'
    action '$$' (noprec):   reduce type --> data_type 'LSBR' 'RSBR'

  immediate action:   reduce type --> data_type 'LSBR' 'RSBR'
 gotos:

state 35:
  items:
    r_type -> data_type . 

  actions:
    action 'EQ' (noprec):   reduce r_type --> data_type
    action 'NE' (noprec):   reduce r_type --> data_type
    action 'LT' (noprec):   reduce r_type --> data_type
    action 'LE' (noprec):   reduce r_type --> data_type
    action 'GT' (noprec):   reduce r_type --> data_type
    action 'GE' (noprec):   reduce r_type --> data_type
    action 'PLUS' (noprec):   reduce r_type --> data_type
    action 'MINUS' (noprec):   reduce r_type --> data_type
    action 'ASTER' (noprec):   reduce r_type --> data_type
    action 'SLASH' (noprec):   reduce r_type --> data_type
    action 'MOD' (noprec):   reduce r_type --> data_type
    action 'NOT' (noprec):   reduce r_type --> data_type
    action 'AND' (noprec):   reduce r_type --> data_type
    action 'OR' (noprec):   reduce r_type --> data_type
    action 'LPAREN' (noprec):   reduce r_type --> data_type
    action 'RPAREN' (noprec):   reduce r_type --> data_type
    action 'LSBR' (noprec):   reduce r_type --> data_type
    action 'RSBR' (noprec):   reduce r_type --> data_type
    action 'LCBR' (noprec):   reduce r_type --> data_type
    action 'RCBR' (noprec):   reduce r_type --> data_type
    action 'COMMA' (noprec):   reduce r_type --> data_type
    action 'COLON' (noprec):   reduce r_type --> data_type
    action 'SEMICOLON' (noprec):   reduce r_type --> data_type
    action 'ASSIGN' (noprec):   reduce r_type --> data_type
    action 'T_BYTE' (noprec):   reduce r_type --> data_type
    action 'T_ELSE' (noprec):   reduce r_type --> data_type
    action 'T_FALSE' (noprec):   reduce r_type --> data_type
    action 'T_IF' (noprec):   reduce r_type --> data_type
    action 'T_INT' (noprec):   reduce r_type --> data_type
    action 'T_PROC' (noprec):   reduce r_type --> data_type
    action 'T_REF' (noprec):   reduce r_type --> data_type
    action 'T_RETURN' (noprec):   reduce r_type --> data_type
    action 'T_WHILE' (noprec):   reduce r_type --> data_type
    action 'T_TRUE' (noprec):   reduce r_type --> data_type
    action 'T_EOF' (noprec):   reduce r_type --> data_type
    action 'ID' (noprec):   reduce r_type --> data_type
    action 'STRING' (noprec):   reduce r_type --> data_type
    action 'INT' (noprec):   reduce r_type --> data_type
    action 'BYTE' (noprec):   reduce r_type --> data_type
    action 'error' (noprec):   reduce r_type --> data_type
    action '#' (noprec):   reduce r_type --> data_type
    action '$$' (noprec):   reduce r_type --> data_type

  immediate action:   reduce r_type --> data_type
 gotos:

state 36:
  items:
    r_type -> 'T_PROC' . 

  actions:
    action 'EQ' (noprec):   reduce r_type --> 'T_PROC'
    action 'NE' (noprec):   reduce r_type --> 'T_PROC'
    action 'LT' (noprec):   reduce r_type --> 'T_PROC'
    action 'LE' (noprec):   reduce r_type --> 'T_PROC'
    action 'GT' (noprec):   reduce r_type --> 'T_PROC'
    action 'GE' (noprec):   reduce r_type --> 'T_PROC'
    action 'PLUS' (noprec):   reduce r_type --> 'T_PROC'
    action 'MINUS' (noprec):   reduce r_type --> 'T_PROC'
    action 'ASTER' (noprec):   reduce r_type --> 'T_PROC'
    action 'SLASH' (noprec):   reduce r_type --> 'T_PROC'
    action 'MOD' (noprec):   reduce r_type --> 'T_PROC'
    action 'NOT' (noprec):   reduce r_type --> 'T_PROC'
    action 'AND' (noprec):   reduce r_type --> 'T_PROC'
    action 'OR' (noprec):   reduce r_type --> 'T_PROC'
    action 'LPAREN' (noprec):   reduce r_type --> 'T_PROC'
    action 'RPAREN' (noprec):   reduce r_type --> 'T_PROC'
    action 'LSBR' (noprec):   reduce r_type --> 'T_PROC'
    action 'RSBR' (noprec):   reduce r_type --> 'T_PROC'
    action 'LCBR' (noprec):   reduce r_type --> 'T_PROC'
    action 'RCBR' (noprec):   reduce r_type --> 'T_PROC'
    action 'COMMA' (noprec):   reduce r_type --> 'T_PROC'
    action 'COLON' (noprec):   reduce r_type --> 'T_PROC'
    action 'SEMICOLON' (noprec):   reduce r_type --> 'T_PROC'
    action 'ASSIGN' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_BYTE' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_ELSE' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_FALSE' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_IF' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_INT' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_PROC' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_REF' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_RETURN' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_WHILE' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_TRUE' (noprec):   reduce r_type --> 'T_PROC'
    action 'T_EOF' (noprec):   reduce r_type --> 'T_PROC'
    action 'ID' (noprec):   reduce r_type --> 'T_PROC'
    action 'STRING' (noprec):   reduce r_type --> 'T_PROC'
    action 'INT' (noprec):   reduce r_type --> 'T_PROC'
    action 'BYTE' (noprec):   reduce r_type --> 'T_PROC'
    action 'error' (noprec):   reduce r_type --> 'T_PROC'
    action '#' (noprec):   reduce r_type --> 'T_PROC'
    action '$$' (noprec):   reduce r_type --> 'T_PROC'

  immediate action:   reduce r_type --> 'T_PROC'
 gotos:

state 37:
  items:
    local_def -> func_def . 

  actions:
    action 'EQ' (noprec):   reduce local_def --> func_def
    action 'NE' (noprec):   reduce local_def --> func_def
    action 'LT' (noprec):   reduce local_def --> func_def
    action 'LE' (noprec):   reduce local_def --> func_def
    action 'GT' (noprec):   reduce local_def --> func_def
    action 'GE' (noprec):   reduce local_def --> func_def
    action 'PLUS' (noprec):   reduce local_def --> func_def
    action 'MINUS' (noprec):   reduce local_def --> func_def
    action 'ASTER' (noprec):   reduce local_def --> func_def
    action 'SLASH' (noprec):   reduce local_def --> func_def
    action 'MOD' (noprec):   reduce local_def --> func_def
    action 'NOT' (noprec):   reduce local_def --> func_def
    action 'AND' (noprec):   reduce local_def --> func_def
    action 'OR' (noprec):   reduce local_def --> func_def
    action 'LPAREN' (noprec):   reduce local_def --> func_def
    action 'RPAREN' (noprec):   reduce local_def --> func_def
    action 'LSBR' (noprec):   reduce local_def --> func_def
    action 'RSBR' (noprec):   reduce local_def --> func_def
    action 'LCBR' (noprec):   reduce local_def --> func_def
    action 'RCBR' (noprec):   reduce local_def --> func_def
    action 'COMMA' (noprec):   reduce local_def --> func_def
    action 'COLON' (noprec):   reduce local_def --> func_def
    action 'SEMICOLON' (noprec):   reduce local_def --> func_def
    action 'ASSIGN' (noprec):   reduce local_def --> func_def
    action 'T_BYTE' (noprec):   reduce local_def --> func_def
    action 'T_ELSE' (noprec):   reduce local_def --> func_def
    action 'T_FALSE' (noprec):   reduce local_def --> func_def
    action 'T_IF' (noprec):   reduce local_def --> func_def
    action 'T_INT' (noprec):   reduce local_def --> func_def
    action 'T_PROC' (noprec):   reduce local_def --> func_def
    action 'T_REF' (noprec):   reduce local_def --> func_def
    action 'T_RETURN' (noprec):   reduce local_def --> func_def
    action 'T_WHILE' (noprec):   reduce local_def --> func_def
    action 'T_TRUE' (noprec):   reduce local_def --> func_def
    action 'T_EOF' (noprec):   reduce local_def --> func_def
    action 'ID' (noprec):   reduce local_def --> func_def
    action 'STRING' (noprec):   reduce local_def --> func_def
    action 'INT' (noprec):   reduce local_def --> func_def
    action 'BYTE' (noprec):   reduce local_def --> func_def
    action 'error' (noprec):   reduce local_def --> func_def
    action '#' (noprec):   reduce local_def --> func_def
    action '$$' (noprec):   reduce local_def --> func_def

  immediate action:   reduce local_def --> func_def
 gotos:

state 38:
  items:
    local_def -> var_def . 

  actions:
    action 'EQ' (noprec):   reduce local_def --> var_def
    action 'NE' (noprec):   reduce local_def --> var_def
    action 'LT' (noprec):   reduce local_def --> var_def
    action 'LE' (noprec):   reduce local_def --> var_def
    action 'GT' (noprec):   reduce local_def --> var_def
    action 'GE' (noprec):   reduce local_def --> var_def
    action 'PLUS' (noprec):   reduce local_def --> var_def
    action 'MINUS' (noprec):   reduce local_def --> var_def
    action 'ASTER' (noprec):   reduce local_def --> var_def
    action 'SLASH' (noprec):   reduce local_def --> var_def
    action 'MOD' (noprec):   reduce local_def --> var_def
    action 'NOT' (noprec):   reduce local_def --> var_def
    action 'AND' (noprec):   reduce local_def --> var_def
    action 'OR' (noprec):   reduce local_def --> var_def
    action 'LPAREN' (noprec):   reduce local_def --> var_def
    action 'RPAREN' (noprec):   reduce local_def --> var_def
    action 'LSBR' (noprec):   reduce local_def --> var_def
    action 'RSBR' (noprec):   reduce local_def --> var_def
    action 'LCBR' (noprec):   reduce local_def --> var_def
    action 'RCBR' (noprec):   reduce local_def --> var_def
    action 'COMMA' (noprec):   reduce local_def --> var_def
    action 'COLON' (noprec):   reduce local_def --> var_def
    action 'SEMICOLON' (noprec):   reduce local_def --> var_def
    action 'ASSIGN' (noprec):   reduce local_def --> var_def
    action 'T_BYTE' (noprec):   reduce local_def --> var_def
    action 'T_ELSE' (noprec):   reduce local_def --> var_def
    action 'T_FALSE' (noprec):   reduce local_def --> var_def
    action 'T_IF' (noprec):   reduce local_def --> var_def
    action 'T_INT' (noprec):   reduce local_def --> var_def
    action 'T_PROC' (noprec):   reduce local_def --> var_def
    action 'T_REF' (noprec):   reduce local_def --> var_def
    action 'T_RETURN' (noprec):   reduce local_def --> var_def
    action 'T_WHILE' (noprec):   reduce local_def --> var_def
    action 'T_TRUE' (noprec):   reduce local_def --> var_def
    action 'T_EOF' (noprec):   reduce local_def --> var_def
    action 'ID' (noprec):   reduce local_def --> var_def
    action 'STRING' (noprec):   reduce local_def --> var_def
    action 'INT' (noprec):   reduce local_def --> var_def
    action 'BYTE' (noprec):   reduce local_def --> var_def
    action 'error' (noprec):   reduce local_def --> var_def
    action '#' (noprec):   reduce local_def --> var_def
    action '$$' (noprec):   reduce local_def --> var_def

  immediate action:   reduce local_def --> var_def
 gotos:

state 39:
  items:
    local_def_list -> local_def . 

  actions:
    action 'EQ' (noprec):   reduce local_def_list --> local_def
    action 'NE' (noprec):   reduce local_def_list --> local_def
    action 'LT' (noprec):   reduce local_def_list --> local_def
    action 'LE' (noprec):   reduce local_def_list --> local_def
    action 'GT' (noprec):   reduce local_def_list --> local_def
    action 'GE' (noprec):   reduce local_def_list --> local_def
    action 'PLUS' (noprec):   reduce local_def_list --> local_def
    action 'MINUS' (noprec):   reduce local_def_list --> local_def
    action 'ASTER' (noprec):   reduce local_def_list --> local_def
    action 'SLASH' (noprec):   reduce local_def_list --> local_def
    action 'MOD' (noprec):   reduce local_def_list --> local_def
    action 'NOT' (noprec):   reduce local_def_list --> local_def
    action 'AND' (noprec):   reduce local_def_list --> local_def
    action 'OR' (noprec):   reduce local_def_list --> local_def
    action 'LPAREN' (noprec):   reduce local_def_list --> local_def
    action 'RPAREN' (noprec):   reduce local_def_list --> local_def
    action 'LSBR' (noprec):   reduce local_def_list --> local_def
    action 'RSBR' (noprec):   reduce local_def_list --> local_def
    action 'LCBR' (noprec):   reduce local_def_list --> local_def
    action 'RCBR' (noprec):   reduce local_def_list --> local_def
    action 'COMMA' (noprec):   reduce local_def_list --> local_def
    action 'COLON' (noprec):   reduce local_def_list --> local_def
    action 'SEMICOLON' (noprec):   reduce local_def_list --> local_def
    action 'ASSIGN' (noprec):   reduce local_def_list --> local_def
    action 'T_BYTE' (noprec):   reduce local_def_list --> local_def
    action 'T_ELSE' (noprec):   reduce local_def_list --> local_def
    action 'T_FALSE' (noprec):   reduce local_def_list --> local_def
    action 'T_IF' (noprec):   reduce local_def_list --> local_def
    action 'T_INT' (noprec):   reduce local_def_list --> local_def
    action 'T_PROC' (noprec):   reduce local_def_list --> local_def
    action 'T_REF' (noprec):   reduce local_def_list --> local_def
    action 'T_RETURN' (noprec):   reduce local_def_list --> local_def
    action 'T_WHILE' (noprec):   reduce local_def_list --> local_def
    action 'T_TRUE' (noprec):   reduce local_def_list --> local_def
    action 'T_EOF' (noprec):   reduce local_def_list --> local_def
    action 'ID' (noprec):   reduce local_def_list --> local_def
    action 'STRING' (noprec):   reduce local_def_list --> local_def
    action 'INT' (noprec):   reduce local_def_list --> local_def
    action 'BYTE' (noprec):   reduce local_def_list --> local_def
    action 'error' (noprec):   reduce local_def_list --> local_def
    action '#' (noprec):   reduce local_def_list --> local_def
    action '$$' (noprec):   reduce local_def_list --> local_def

  immediate action:   reduce local_def_list --> local_def
 gotos:

state 40:
  items:
    local_def_list -> local_def_list local_def . 

  actions:
    action 'EQ' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'NE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'LT' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'LE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'GT' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'GE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'PLUS' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'MINUS' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'ASTER' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'SLASH' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'MOD' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'NOT' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'AND' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'OR' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'LPAREN' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'RPAREN' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'LSBR' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'RSBR' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'LCBR' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'RCBR' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'COMMA' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'COLON' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'SEMICOLON' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'ASSIGN' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_BYTE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_ELSE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_FALSE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_IF' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_INT' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_PROC' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_REF' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_RETURN' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_WHILE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_TRUE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'T_EOF' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'ID' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'STRING' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'INT' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'BYTE' (noprec):   reduce local_def_list --> local_def_list local_def
    action 'error' (noprec):   reduce local_def_list --> local_def_list local_def
    action '#' (noprec):   reduce local_def_list --> local_def_list local_def
    action '$$' (noprec):   reduce local_def_list --> local_def_list local_def

  immediate action:   reduce local_def_list --> local_def_list local_def
 gotos:

state 41:
  items:
    var_def -> 'ID' 'COLON' . data_type 'SEMICOLON'
    var_def -> 'ID' 'COLON' . data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    var_def -> 'ID' 'COLON' . data_type 'error' 'SEMICOLON'
    var_def -> 'ID' 'COLON' . 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   shift 31
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   shift 30
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 50
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto data_type: 42

state 42:
  items:
    var_def -> 'ID' 'COLON' data_type . 'SEMICOLON'
    var_def -> 'ID' 'COLON' data_type . 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    var_def -> 'ID' 'COLON' data_type . 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   shift 44
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 43
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 48
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 43:
  items:
    var_def -> 'ID' 'COLON' data_type 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'NE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'LT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'LE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'GT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'GE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'PLUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'MINUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'ASTER' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'SLASH' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'MOD' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'NOT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'AND' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'OR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'LSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'RSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'LCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'RCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'COMMA' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'COLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_IF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_REF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'ID' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'STRING' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action 'error' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action '#' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
    action '$$' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'

  immediate action:   reduce var_def --> 'ID' 'COLON' data_type 'SEMICOLON'
 gotos:

state 44:
  items:
    var_def -> 'ID' 'COLON' data_type 'LSBR' . 'INT' 'RSBR' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 45
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 45:
  items:
    var_def -> 'ID' 'COLON' data_type 'LSBR' 'INT' . 'RSBR' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   shift 46
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 46:
  items:
    var_def -> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 47
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 47:
  items:
    var_def -> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'NE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'LT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'LE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'GT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'GE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'MOD' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'NOT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'AND' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'OR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'COLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'ID' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'STRING' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action 'error' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action '#' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
    action '$$' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'

  immediate action:   reduce var_def --> 'ID' 'COLON' data_type 'LSBR' 'INT' 'RSBR' 'SEMICOLON'
 gotos:

state 48:
  items:
    var_def -> 'ID' 'COLON' data_type 'error' . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 49
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 49:
  items:
    var_def -> 'ID' 'COLON' data_type 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action '#' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'

  immediate action:   reduce var_def --> 'ID' 'COLON' data_type 'error' 'SEMICOLON'
 gotos:

state 50:
  items:
    var_def -> 'ID' 'COLON' 'error' . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 51
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 51:
  items:
    var_def -> 'ID' 'COLON' 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action '#' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'

  immediate action:   reduce var_def --> 'ID' 'COLON' 'error' 'SEMICOLON'
 gotos:

state 52:
  items:
    stmt -> 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> 'SEMICOLON'

  immediate action:   reduce stmt --> 'SEMICOLON'
 gotos:

state 53:
  items:
    stmt -> local_def . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> local_def
    action 'NE' (noprec):   reduce stmt --> local_def
    action 'LT' (noprec):   reduce stmt --> local_def
    action 'LE' (noprec):   reduce stmt --> local_def
    action 'GT' (noprec):   reduce stmt --> local_def
    action 'GE' (noprec):   reduce stmt --> local_def
    action 'PLUS' (noprec):   reduce stmt --> local_def
    action 'MINUS' (noprec):   reduce stmt --> local_def
    action 'ASTER' (noprec):   reduce stmt --> local_def
    action 'SLASH' (noprec):   reduce stmt --> local_def
    action 'MOD' (noprec):   reduce stmt --> local_def
    action 'NOT' (noprec):   reduce stmt --> local_def
    action 'AND' (noprec):   reduce stmt --> local_def
    action 'OR' (noprec):   reduce stmt --> local_def
    action 'LPAREN' (noprec):   reduce stmt --> local_def
    action 'RPAREN' (noprec):   reduce stmt --> local_def
    action 'LSBR' (noprec):   reduce stmt --> local_def
    action 'RSBR' (noprec):   reduce stmt --> local_def
    action 'LCBR' (noprec):   reduce stmt --> local_def
    action 'RCBR' (noprec):   reduce stmt --> local_def
    action 'COMMA' (noprec):   reduce stmt --> local_def
    action 'COLON' (noprec):   reduce stmt --> local_def
    action 'SEMICOLON' (noprec):   reduce stmt --> local_def
    action 'ASSIGN' (noprec):   reduce stmt --> local_def
    action 'T_BYTE' (noprec):   reduce stmt --> local_def
    action 'T_ELSE' (noprec):   reduce stmt --> local_def
    action 'T_FALSE' (noprec):   reduce stmt --> local_def
    action 'T_IF' (noprec):   reduce stmt --> local_def
    action 'T_INT' (noprec):   reduce stmt --> local_def
    action 'T_PROC' (noprec):   reduce stmt --> local_def
    action 'T_REF' (noprec):   reduce stmt --> local_def
    action 'T_RETURN' (noprec):   reduce stmt --> local_def
    action 'T_WHILE' (noprec):   reduce stmt --> local_def
    action 'T_TRUE' (noprec):   reduce stmt --> local_def
    action 'T_EOF' (noprec):   reduce stmt --> local_def
    action 'ID' (noprec):   reduce stmt --> local_def
    action 'STRING' (noprec):   reduce stmt --> local_def
    action 'INT' (noprec):   reduce stmt --> local_def
    action 'BYTE' (noprec):   reduce stmt --> local_def
    action 'error' (noprec):   reduce stmt --> local_def
    action '#' (noprec):   reduce stmt --> local_def
    action '$$' (noprec):   reduce stmt --> local_def

  immediate action:   reduce stmt --> local_def
 gotos:

state 54:
  items:
    stmt -> l_value . 'ASSIGN' expr 'SEMICOLON'
    stmt -> l_value . 'ASSIGN' 'error' 'SEMICOLON'
    stmt -> l_value . 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   shift 55
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 79
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 55:
  items:
    stmt -> l_value 'ASSIGN' . expr 'SEMICOLON'
    stmt -> l_value 'ASSIGN' . 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 77
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 56
    goto l_value: 112

state 56:
  items:
    stmt -> l_value 'ASSIGN' expr . 'SEMICOLON'
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 57
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 57:
  items:
    stmt -> l_value 'ASSIGN' expr 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'

  immediate action:   reduce stmt --> l_value 'ASSIGN' expr 'SEMICOLON'
 gotos:

state 58:
  items:
    stmt -> compound_stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> compound_stmt
    action 'NE' (noprec):   reduce stmt --> compound_stmt
    action 'LT' (noprec):   reduce stmt --> compound_stmt
    action 'LE' (noprec):   reduce stmt --> compound_stmt
    action 'GT' (noprec):   reduce stmt --> compound_stmt
    action 'GE' (noprec):   reduce stmt --> compound_stmt
    action 'PLUS' (noprec):   reduce stmt --> compound_stmt
    action 'MINUS' (noprec):   reduce stmt --> compound_stmt
    action 'ASTER' (noprec):   reduce stmt --> compound_stmt
    action 'SLASH' (noprec):   reduce stmt --> compound_stmt
    action 'MOD' (noprec):   reduce stmt --> compound_stmt
    action 'NOT' (noprec):   reduce stmt --> compound_stmt
    action 'AND' (noprec):   reduce stmt --> compound_stmt
    action 'OR' (noprec):   reduce stmt --> compound_stmt
    action 'LPAREN' (noprec):   reduce stmt --> compound_stmt
    action 'RPAREN' (noprec):   reduce stmt --> compound_stmt
    action 'LSBR' (noprec):   reduce stmt --> compound_stmt
    action 'RSBR' (noprec):   reduce stmt --> compound_stmt
    action 'LCBR' (noprec):   reduce stmt --> compound_stmt
    action 'RCBR' (noprec):   reduce stmt --> compound_stmt
    action 'COMMA' (noprec):   reduce stmt --> compound_stmt
    action 'COLON' (noprec):   reduce stmt --> compound_stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> compound_stmt
    action 'ASSIGN' (noprec):   reduce stmt --> compound_stmt
    action 'T_BYTE' (noprec):   reduce stmt --> compound_stmt
    action 'T_ELSE' (noprec):   reduce stmt --> compound_stmt
    action 'T_FALSE' (noprec):   reduce stmt --> compound_stmt
    action 'T_IF' (noprec):   reduce stmt --> compound_stmt
    action 'T_INT' (noprec):   reduce stmt --> compound_stmt
    action 'T_PROC' (noprec):   reduce stmt --> compound_stmt
    action 'T_REF' (noprec):   reduce stmt --> compound_stmt
    action 'T_RETURN' (noprec):   reduce stmt --> compound_stmt
    action 'T_WHILE' (noprec):   reduce stmt --> compound_stmt
    action 'T_TRUE' (noprec):   reduce stmt --> compound_stmt
    action 'T_EOF' (noprec):   reduce stmt --> compound_stmt
    action 'ID' (noprec):   reduce stmt --> compound_stmt
    action 'STRING' (noprec):   reduce stmt --> compound_stmt
    action 'INT' (noprec):   reduce stmt --> compound_stmt
    action 'BYTE' (noprec):   reduce stmt --> compound_stmt
    action 'error' (noprec):   reduce stmt --> compound_stmt
    action '#' (noprec):   reduce stmt --> compound_stmt
    action '$$' (noprec):   reduce stmt --> compound_stmt

  immediate action:   reduce stmt --> compound_stmt
 gotos:

state 59:
  items:
    stmt -> func_call . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 60
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 60:
  items:
    stmt -> func_call 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> func_call 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> func_call 'SEMICOLON'

  immediate action:   reduce stmt --> func_call 'SEMICOLON'
 gotos:

state 61:
  items:
    stmt -> 'T_IF' . 'LPAREN' cond 'RPAREN' stmt
    stmt -> 'T_IF' . 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    stmt -> 'T_IF' . 'error' stmt
    stmt -> 'T_IF' . 'error' stmt 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 62
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 81
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 62:
  items:
    stmt -> 'T_IF' 'LPAREN' . cond 'RPAREN' stmt
    stmt -> 'T_IF' 'LPAREN' . cond 'RPAREN' stmt 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 134
    goto l_value: 112
    goto cond: 63

state 63:
  items:
    stmt -> 'T_IF' 'LPAREN' cond . 'RPAREN' stmt
    stmt -> 'T_IF' 'LPAREN' cond . 'RPAREN' stmt 'T_ELSE' stmt
    cond -> cond . 'AND' cond
    cond -> cond . 'OR' cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9996):   shift 167
    action 'OR' (explicit left 9995):   shift 168
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 64
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 64:
  items:
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' . stmt
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' . stmt 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 65
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 65:
  items:
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' stmt . 
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' stmt . 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_ELSE' (noprec):   shift 66
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action 'error' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action '#' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt
    action '$$' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt

  immediate action: <none>
 gotos:

state 66:
  items:
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' . stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 67
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 67:
  items:
    stmt -> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action 'error' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action '#' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
    action '$$' (noprec):   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt

  immediate action:   reduce stmt --> 'T_IF' 'LPAREN' cond 'RPAREN' stmt 'T_ELSE' stmt
 gotos:

state 68:
  items:
    stmt -> 'T_WHILE' . 'LPAREN' cond 'RPAREN' stmt
    stmt -> 'T_WHILE' . 'error' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 69
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 85
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 69:
  items:
    stmt -> 'T_WHILE' 'LPAREN' . cond 'RPAREN' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 134
    goto l_value: 112
    goto cond: 70

state 70:
  items:
    stmt -> 'T_WHILE' 'LPAREN' cond . 'RPAREN' stmt
    cond -> cond . 'AND' cond
    cond -> cond . 'OR' cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9996):   shift 167
    action 'OR' (explicit left 9995):   shift 168
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 71
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 71:
  items:
    stmt -> 'T_WHILE' 'LPAREN' cond 'RPAREN' . stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 72
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 72:
  items:
    stmt -> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action 'error' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action '#' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
    action '$$' (noprec):   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt

  immediate action:   reduce stmt --> 'T_WHILE' 'LPAREN' cond 'RPAREN' stmt
 gotos:

state 73:
  items:
    stmt -> 'T_RETURN' . 'SEMICOLON'
    stmt -> 'T_RETURN' . expr 'SEMICOLON'
    stmt -> 'T_RETURN' . 'error' 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 74
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 87
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 75
    goto l_value: 112

state 74:
  items:
    stmt -> 'T_RETURN' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> 'T_RETURN' 'SEMICOLON'

  immediate action:   reduce stmt --> 'T_RETURN' 'SEMICOLON'
 gotos:

state 75:
  items:
    stmt -> 'T_RETURN' expr . 'SEMICOLON'
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 76
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 76:
  items:
    stmt -> 'T_RETURN' expr 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'

  immediate action:   reduce stmt --> 'T_RETURN' expr 'SEMICOLON'
 gotos:

state 77:
  items:
    stmt -> l_value 'ASSIGN' 'error' . 'SEMICOLON'
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 78
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 78:
  items:
    stmt -> l_value 'ASSIGN' 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'

  immediate action:   reduce stmt --> l_value 'ASSIGN' 'error' 'SEMICOLON'
 gotos:

state 79:
  items:
    stmt -> l_value 'error' . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 80
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 80:
  items:
    stmt -> l_value 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> l_value 'error' 'SEMICOLON'

  immediate action:   reduce stmt --> l_value 'error' 'SEMICOLON'
 gotos:

state 81:
  items:
    stmt -> 'T_IF' 'error' . stmt
    stmt -> 'T_IF' 'error' . stmt 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 82
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 82:
  items:
    stmt -> 'T_IF' 'error' stmt . 
    stmt -> 'T_IF' 'error' stmt . 'T_ELSE' stmt

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_ELSE' (noprec):   shift 83
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action 'error' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action '#' (noprec):   reduce stmt --> 'T_IF' 'error' stmt
    action '$$' (noprec):   reduce stmt --> 'T_IF' 'error' stmt

  immediate action: <none>
 gotos:

state 83:
  items:
    stmt -> 'T_IF' 'error' stmt 'T_ELSE' . stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 84
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 84:
  items:
    stmt -> 'T_IF' 'error' stmt 'T_ELSE' stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action 'error' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action '#' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
    action '$$' (noprec):   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt

  immediate action:   reduce stmt --> 'T_IF' 'error' stmt 'T_ELSE' stmt
 gotos:

state 85:
  items:
    stmt -> 'T_WHILE' 'error' . stmt

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 86
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 86:
  items:
    stmt -> 'T_WHILE' 'error' stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'NE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'LT' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'LE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'GT' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'GE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'PLUS' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'MINUS' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'ASTER' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'SLASH' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'MOD' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'NOT' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'AND' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'OR' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'LPAREN' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'RPAREN' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'LSBR' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'RSBR' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'LCBR' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'RCBR' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'COMMA' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'COLON' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_IF' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_INT' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_PROC' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_REF' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'T_EOF' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'ID' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'STRING' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'INT' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'BYTE' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action 'error' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action '#' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt
    action '$$' (noprec):   reduce stmt --> 'T_WHILE' 'error' stmt

  immediate action:   reduce stmt --> 'T_WHILE' 'error' stmt
 gotos:

state 87:
  items:
    stmt -> 'T_RETURN' 'error' . 'SEMICOLON'
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 88
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 88:
  items:
    stmt -> 'T_RETURN' 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'

  immediate action:   reduce stmt --> 'T_RETURN' 'error' 'SEMICOLON'
 gotos:

state 89:
  items:
    stmt -> 'error' . 'SEMICOLON'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 91
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 90:
  items:
    stmt -> 'error' . 'SEMICOLON'
    compound_stmt -> 'LCBR' 'error' . 'RCBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   shift 98
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 91
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 91:
  items:
    stmt -> 'error' 'SEMICOLON' . 

  actions:
    action 'EQ' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'NE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'LT' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'LE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'GT' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'GE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'PLUS' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'MINUS' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'ASTER' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'SLASH' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'MOD' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'NOT' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'AND' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'OR' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'LPAREN' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'RPAREN' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'LSBR' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'RSBR' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'LCBR' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'RCBR' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'COMMA' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'COLON' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'SEMICOLON' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'ASSIGN' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_BYTE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_ELSE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_FALSE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_IF' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_INT' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_PROC' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_REF' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_RETURN' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_WHILE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_TRUE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'T_EOF' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'ID' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'STRING' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'INT' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'BYTE' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action 'error' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action '#' (noprec):   reduce stmt --> 'error' 'SEMICOLON'
    action '$$' (noprec):   reduce stmt --> 'error' 'SEMICOLON'

  immediate action:   reduce stmt --> 'error' 'SEMICOLON'
 gotos:

state 92:
  items:
    stmt_list -> stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt_list --> stmt
    action 'NE' (noprec):   reduce stmt_list --> stmt
    action 'LT' (noprec):   reduce stmt_list --> stmt
    action 'LE' (noprec):   reduce stmt_list --> stmt
    action 'GT' (noprec):   reduce stmt_list --> stmt
    action 'GE' (noprec):   reduce stmt_list --> stmt
    action 'PLUS' (noprec):   reduce stmt_list --> stmt
    action 'MINUS' (noprec):   reduce stmt_list --> stmt
    action 'ASTER' (noprec):   reduce stmt_list --> stmt
    action 'SLASH' (noprec):   reduce stmt_list --> stmt
    action 'MOD' (noprec):   reduce stmt_list --> stmt
    action 'NOT' (noprec):   reduce stmt_list --> stmt
    action 'AND' (noprec):   reduce stmt_list --> stmt
    action 'OR' (noprec):   reduce stmt_list --> stmt
    action 'LPAREN' (noprec):   reduce stmt_list --> stmt
    action 'RPAREN' (noprec):   reduce stmt_list --> stmt
    action 'LSBR' (noprec):   reduce stmt_list --> stmt
    action 'RSBR' (noprec):   reduce stmt_list --> stmt
    action 'LCBR' (noprec):   reduce stmt_list --> stmt
    action 'RCBR' (noprec):   reduce stmt_list --> stmt
    action 'COMMA' (noprec):   reduce stmt_list --> stmt
    action 'COLON' (noprec):   reduce stmt_list --> stmt
    action 'SEMICOLON' (noprec):   reduce stmt_list --> stmt
    action 'ASSIGN' (noprec):   reduce stmt_list --> stmt
    action 'T_BYTE' (noprec):   reduce stmt_list --> stmt
    action 'T_ELSE' (noprec):   reduce stmt_list --> stmt
    action 'T_FALSE' (noprec):   reduce stmt_list --> stmt
    action 'T_IF' (noprec):   reduce stmt_list --> stmt
    action 'T_INT' (noprec):   reduce stmt_list --> stmt
    action 'T_PROC' (noprec):   reduce stmt_list --> stmt
    action 'T_REF' (noprec):   reduce stmt_list --> stmt
    action 'T_RETURN' (noprec):   reduce stmt_list --> stmt
    action 'T_WHILE' (noprec):   reduce stmt_list --> stmt
    action 'T_TRUE' (noprec):   reduce stmt_list --> stmt
    action 'T_EOF' (noprec):   reduce stmt_list --> stmt
    action 'ID' (noprec):   reduce stmt_list --> stmt
    action 'STRING' (noprec):   reduce stmt_list --> stmt
    action 'INT' (noprec):   reduce stmt_list --> stmt
    action 'BYTE' (noprec):   reduce stmt_list --> stmt
    action 'error' (noprec):   reduce stmt_list --> stmt
    action '#' (noprec):   reduce stmt_list --> stmt
    action '$$' (noprec):   reduce stmt_list --> stmt

  immediate action:   reduce stmt_list --> stmt
 gotos:

state 93:
  items:
    stmt_list -> stmt_list . stmt
    compound_stmt -> 'LCBR' stmt_list . 'RCBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   shift 97
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 89
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 94
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 94:
  items:
    stmt_list -> stmt_list stmt . 

  actions:
    action 'EQ' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'NE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'LT' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'LE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'GT' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'GE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'PLUS' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'MINUS' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'ASTER' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'SLASH' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'MOD' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'NOT' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'AND' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'OR' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'LPAREN' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'RPAREN' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'LSBR' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'RSBR' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'LCBR' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'RCBR' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'COMMA' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'COLON' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'SEMICOLON' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'ASSIGN' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_BYTE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_ELSE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_FALSE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_IF' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_INT' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_PROC' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_REF' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_RETURN' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_WHILE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_TRUE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'T_EOF' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'ID' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'STRING' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'INT' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'BYTE' (noprec):   reduce stmt_list --> stmt_list stmt
    action 'error' (noprec):   reduce stmt_list --> stmt_list stmt
    action '#' (noprec):   reduce stmt_list --> stmt_list stmt
    action '$$' (noprec):   reduce stmt_list --> stmt_list stmt

  immediate action:   reduce stmt_list --> stmt_list stmt
 gotos:

state 95:
  items:
    compound_stmt -> 'LCBR' . 'RCBR'
    compound_stmt -> 'LCBR' . stmt_list 'RCBR'
    compound_stmt -> 'LCBR' . 'error' 'RCBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   shift 95
    action 'RCBR' (noprec):   shift 96
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   shift 52
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   shift 61
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   shift 73
    action 'T_WHILE' (noprec):   shift 68
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 13
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   shift 90
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_def: 37
    goto func_head: 4
    goto local_def: 53
    goto var_def: 38
    goto stmt: 92
    goto stmt_list: 93
    goto compound_stmt: 58
    goto func_call: 59
    goto l_value: 54

state 96:
  items:
    compound_stmt -> 'LCBR' 'RCBR' . 

  actions:
    action 'EQ' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'NE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'LT' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'LE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'GT' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'GE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'PLUS' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'MINUS' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'ASTER' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'SLASH' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'MOD' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'NOT' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'AND' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'OR' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'LPAREN' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'RPAREN' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'LSBR' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'RSBR' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'LCBR' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'RCBR' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'COMMA' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'COLON' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'SEMICOLON' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'ASSIGN' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_BYTE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_ELSE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_FALSE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_IF' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_INT' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_PROC' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_REF' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_RETURN' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_WHILE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_TRUE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'T_EOF' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'ID' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'STRING' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'INT' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'BYTE' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action 'error' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action '#' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'
    action '$$' (noprec):   reduce compound_stmt --> 'LCBR' 'RCBR'

  immediate action:   reduce compound_stmt --> 'LCBR' 'RCBR'
 gotos:

state 97:
  items:
    compound_stmt -> 'LCBR' stmt_list 'RCBR' . 

  actions:
    action 'EQ' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'NE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'LT' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'LE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'GT' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'GE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'PLUS' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'MINUS' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'ASTER' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'SLASH' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'MOD' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'NOT' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'AND' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'OR' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'LPAREN' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'RPAREN' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'LSBR' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'RSBR' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'LCBR' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'RCBR' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'COMMA' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'COLON' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'SEMICOLON' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'ASSIGN' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_BYTE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_ELSE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_FALSE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_IF' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_INT' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_PROC' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_REF' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_RETURN' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_WHILE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_TRUE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'T_EOF' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'ID' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'STRING' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'INT' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'BYTE' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action 'error' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action '#' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
    action '$$' (noprec):   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'

  immediate action:   reduce compound_stmt --> 'LCBR' stmt_list 'RCBR'
 gotos:

state 98:
  items:
    compound_stmt -> 'LCBR' 'error' 'RCBR' . 

  actions:
    action 'EQ' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'NE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'LT' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'LE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'GT' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'GE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'PLUS' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'MINUS' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'ASTER' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'SLASH' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'MOD' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'NOT' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'AND' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'OR' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'LPAREN' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'RPAREN' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'LSBR' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'RSBR' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'LCBR' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'RCBR' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'COMMA' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'COLON' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'SEMICOLON' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'ASSIGN' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_BYTE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_ELSE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_FALSE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_IF' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_INT' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_PROC' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_REF' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_RETURN' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_WHILE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_TRUE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'T_EOF' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'ID' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'STRING' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'INT' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'BYTE' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action 'error' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action '#' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
    action '$$' (noprec):   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'

  immediate action:   reduce compound_stmt --> 'LCBR' 'error' 'RCBR'
 gotos:

state 99:
  items:
    func_call -> 'ID' . 'LPAREN' 'RPAREN'
    func_call -> 'ID' . 'LPAREN' expr_list 'RPAREN'
    ref_value -> 'ID' . 
    l_value -> 'ID' . 
    l_value -> 'ID' . 'LSBR' expr 'RSBR'

  actions:
    action 'EQ' (noprec):   reduce ref_value --> 'ID'
    action 'NE' (noprec):   reduce ref_value --> 'ID'
    action 'LT' (noprec):   reduce ref_value --> 'ID'
    action 'LE' (noprec):   reduce ref_value --> 'ID'
    action 'GT' (noprec):   reduce ref_value --> 'ID'
    action 'GE' (noprec):   reduce ref_value --> 'ID'
    action 'PLUS' (noprec):   reduce l_value --> 'ID'
    action 'MINUS' (noprec):   reduce l_value --> 'ID'
    action 'ASTER' (noprec):   reduce l_value --> 'ID'
    action 'SLASH' (noprec):   reduce l_value --> 'ID'
    action 'MOD' (noprec):   reduce l_value --> 'ID'
    action 'NOT' (noprec):   reduce ref_value --> 'ID'
    action 'AND' (noprec):   reduce ref_value --> 'ID'
    action 'OR' (noprec):   reduce ref_value --> 'ID'
    action 'LPAREN' (noprec):   shift 101
    action 'RPAREN' (noprec):   reduce ref_value --> 'ID'
    action 'LSBR' (noprec):   shift 156
    action 'RSBR' (noprec):   reduce ref_value --> 'ID'
    action 'LCBR' (noprec):   reduce ref_value --> 'ID'
    action 'RCBR' (noprec):   reduce ref_value --> 'ID'
    action 'COMMA' (noprec):   reduce ref_value --> 'ID'
    action 'COLON' (noprec):   reduce ref_value --> 'ID'
    action 'SEMICOLON' (noprec):   reduce ref_value --> 'ID'
    action 'ASSIGN' (noprec):   reduce ref_value --> 'ID'
    action 'T_BYTE' (noprec):   reduce ref_value --> 'ID'
    action 'T_ELSE' (noprec):   reduce ref_value --> 'ID'
    action 'T_FALSE' (noprec):   reduce ref_value --> 'ID'
    action 'T_IF' (noprec):   reduce ref_value --> 'ID'
    action 'T_INT' (noprec):   reduce ref_value --> 'ID'
    action 'T_PROC' (noprec):   reduce ref_value --> 'ID'
    action 'T_REF' (noprec):   reduce ref_value --> 'ID'
    action 'T_RETURN' (noprec):   reduce ref_value --> 'ID'
    action 'T_WHILE' (noprec):   reduce ref_value --> 'ID'
    action 'T_TRUE' (noprec):   reduce ref_value --> 'ID'
    action 'T_EOF' (noprec):   reduce ref_value --> 'ID'
    action 'ID' (noprec):   reduce ref_value --> 'ID'
    action 'STRING' (noprec):   reduce ref_value --> 'ID'
    action 'INT' (noprec):   reduce ref_value --> 'ID'
    action 'BYTE' (noprec):   reduce ref_value --> 'ID'
    action 'error' (noprec):   reduce ref_value --> 'ID'
    action '#' (noprec):   reduce ref_value --> 'ID'
    action '$$' (noprec):   reduce ref_value --> 'ID'

  immediate action: <none>
 gotos:

state 100:
  items:
    func_call -> 'ID' . 'LPAREN' 'RPAREN'
    func_call -> 'ID' . 'LPAREN' expr_list 'RPAREN'
    l_value -> 'ID' . 
    l_value -> 'ID' . 'LSBR' expr 'RSBR'

  actions:
    action 'EQ' (noprec):   reduce l_value --> 'ID'
    action 'NE' (noprec):   reduce l_value --> 'ID'
    action 'LT' (noprec):   reduce l_value --> 'ID'
    action 'LE' (noprec):   reduce l_value --> 'ID'
    action 'GT' (noprec):   reduce l_value --> 'ID'
    action 'GE' (noprec):   reduce l_value --> 'ID'
    action 'PLUS' (noprec):   reduce l_value --> 'ID'
    action 'MINUS' (noprec):   reduce l_value --> 'ID'
    action 'ASTER' (noprec):   reduce l_value --> 'ID'
    action 'SLASH' (noprec):   reduce l_value --> 'ID'
    action 'MOD' (noprec):   reduce l_value --> 'ID'
    action 'NOT' (noprec):   reduce l_value --> 'ID'
    action 'AND' (noprec):   reduce l_value --> 'ID'
    action 'OR' (noprec):   reduce l_value --> 'ID'
    action 'LPAREN' (noprec):   shift 101
    action 'RPAREN' (noprec):   reduce l_value --> 'ID'
    action 'LSBR' (noprec):   shift 156
    action 'RSBR' (noprec):   reduce l_value --> 'ID'
    action 'LCBR' (noprec):   reduce l_value --> 'ID'
    action 'RCBR' (noprec):   reduce l_value --> 'ID'
    action 'COMMA' (noprec):   reduce l_value --> 'ID'
    action 'COLON' (noprec):   reduce l_value --> 'ID'
    action 'SEMICOLON' (noprec):   reduce l_value --> 'ID'
    action 'ASSIGN' (noprec):   reduce l_value --> 'ID'
    action 'T_BYTE' (noprec):   reduce l_value --> 'ID'
    action 'T_ELSE' (noprec):   reduce l_value --> 'ID'
    action 'T_FALSE' (noprec):   reduce l_value --> 'ID'
    action 'T_IF' (noprec):   reduce l_value --> 'ID'
    action 'T_INT' (noprec):   reduce l_value --> 'ID'
    action 'T_PROC' (noprec):   reduce l_value --> 'ID'
    action 'T_REF' (noprec):   reduce l_value --> 'ID'
    action 'T_RETURN' (noprec):   reduce l_value --> 'ID'
    action 'T_WHILE' (noprec):   reduce l_value --> 'ID'
    action 'T_TRUE' (noprec):   reduce l_value --> 'ID'
    action 'T_EOF' (noprec):   reduce l_value --> 'ID'
    action 'ID' (noprec):   reduce l_value --> 'ID'
    action 'STRING' (noprec):   reduce l_value --> 'ID'
    action 'INT' (noprec):   reduce l_value --> 'ID'
    action 'BYTE' (noprec):   reduce l_value --> 'ID'
    action 'error' (noprec):   reduce l_value --> 'ID'
    action '#' (noprec):   reduce l_value --> 'ID'
    action '$$' (noprec):   reduce l_value --> 'ID'

  immediate action: <none>
 gotos:

state 101:
  items:
    func_call -> 'ID' 'LPAREN' . 'RPAREN'
    func_call -> 'ID' 'LPAREN' . expr_list 'RPAREN'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   shift 102
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 99
    action 'STRING' (noprec):   shift 155
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr_list: 103
    goto expr: 105
    goto ref_value: 106
    goto l_value: 112

state 102:
  items:
    func_call -> 'ID' 'LPAREN' 'RPAREN' . 

  actions:
    action 'EQ' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'NE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'LT' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'LE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'GT' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'GE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'PLUS' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'MINUS' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'ASTER' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'SLASH' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'MOD' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'NOT' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'AND' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'OR' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'LPAREN' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'RPAREN' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'LSBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'RSBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'LCBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'RCBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'COMMA' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'COLON' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'SEMICOLON' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'ASSIGN' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_BYTE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_ELSE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_FALSE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_IF' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_INT' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_PROC' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_REF' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_RETURN' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_WHILE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_TRUE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'T_EOF' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'ID' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'STRING' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'INT' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'BYTE' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action 'error' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action '#' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
    action '$$' (noprec):   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'

  immediate action:   reduce func_call --> 'ID' 'LPAREN' 'RPAREN'
 gotos:

state 103:
  items:
    func_call -> 'ID' 'LPAREN' expr_list . 'RPAREN'
    expr_list -> expr_list . 'COMMA' expr
    expr_list -> expr_list . 'COMMA' ref_value

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 104
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   shift 107
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 104:
  items:
    func_call -> 'ID' 'LPAREN' expr_list 'RPAREN' . 

  actions:
    action 'EQ' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'NE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'LT' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'LE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'GT' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'GE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'PLUS' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'MINUS' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'ASTER' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'SLASH' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'MOD' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'NOT' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'AND' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'OR' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'LPAREN' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'RPAREN' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'LSBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'RSBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'LCBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'RCBR' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'COMMA' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'COLON' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'SEMICOLON' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'ASSIGN' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_BYTE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_ELSE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_FALSE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_IF' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_INT' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_PROC' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_REF' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_RETURN' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_WHILE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_TRUE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'T_EOF' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'ID' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'STRING' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'INT' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'BYTE' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action 'error' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action '#' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
    action '$$' (noprec):   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'

  immediate action:   reduce func_call --> 'ID' 'LPAREN' expr_list 'RPAREN'
 gotos:

state 105:
  items:
    expr_list -> expr . 
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (noprec):   reduce expr_list --> expr
    action 'NE' (noprec):   reduce expr_list --> expr
    action 'LT' (noprec):   reduce expr_list --> expr
    action 'LE' (noprec):   reduce expr_list --> expr
    action 'GT' (noprec):   reduce expr_list --> expr
    action 'GE' (noprec):   reduce expr_list --> expr
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   reduce expr_list --> expr
    action 'AND' (noprec):   reduce expr_list --> expr
    action 'OR' (noprec):   reduce expr_list --> expr
    action 'LPAREN' (noprec):   reduce expr_list --> expr
    action 'RPAREN' (noprec):   reduce expr_list --> expr
    action 'LSBR' (noprec):   reduce expr_list --> expr
    action 'RSBR' (noprec):   reduce expr_list --> expr
    action 'LCBR' (noprec):   reduce expr_list --> expr
    action 'RCBR' (noprec):   reduce expr_list --> expr
    action 'COMMA' (noprec):   reduce expr_list --> expr
    action 'COLON' (noprec):   reduce expr_list --> expr
    action 'SEMICOLON' (noprec):   reduce expr_list --> expr
    action 'ASSIGN' (noprec):   reduce expr_list --> expr
    action 'T_BYTE' (noprec):   reduce expr_list --> expr
    action 'T_ELSE' (noprec):   reduce expr_list --> expr
    action 'T_FALSE' (noprec):   reduce expr_list --> expr
    action 'T_IF' (noprec):   reduce expr_list --> expr
    action 'T_INT' (noprec):   reduce expr_list --> expr
    action 'T_PROC' (noprec):   reduce expr_list --> expr
    action 'T_REF' (noprec):   reduce expr_list --> expr
    action 'T_RETURN' (noprec):   reduce expr_list --> expr
    action 'T_WHILE' (noprec):   reduce expr_list --> expr
    action 'T_TRUE' (noprec):   reduce expr_list --> expr
    action 'T_EOF' (noprec):   reduce expr_list --> expr
    action 'ID' (noprec):   reduce expr_list --> expr
    action 'STRING' (noprec):   reduce expr_list --> expr
    action 'INT' (noprec):   reduce expr_list --> expr
    action 'BYTE' (noprec):   reduce expr_list --> expr
    action 'error' (noprec):   reduce expr_list --> expr
    action '#' (noprec):   reduce expr_list --> expr
    action '$$' (noprec):   reduce expr_list --> expr

  immediate action: <none>
 gotos:

state 106:
  items:
    expr_list -> ref_value . 

  actions:
    action 'EQ' (noprec):   reduce expr_list --> ref_value
    action 'NE' (noprec):   reduce expr_list --> ref_value
    action 'LT' (noprec):   reduce expr_list --> ref_value
    action 'LE' (noprec):   reduce expr_list --> ref_value
    action 'GT' (noprec):   reduce expr_list --> ref_value
    action 'GE' (noprec):   reduce expr_list --> ref_value
    action 'PLUS' (noprec):   reduce expr_list --> ref_value
    action 'MINUS' (noprec):   reduce expr_list --> ref_value
    action 'ASTER' (noprec):   reduce expr_list --> ref_value
    action 'SLASH' (noprec):   reduce expr_list --> ref_value
    action 'MOD' (noprec):   reduce expr_list --> ref_value
    action 'NOT' (noprec):   reduce expr_list --> ref_value
    action 'AND' (noprec):   reduce expr_list --> ref_value
    action 'OR' (noprec):   reduce expr_list --> ref_value
    action 'LPAREN' (noprec):   reduce expr_list --> ref_value
    action 'RPAREN' (noprec):   reduce expr_list --> ref_value
    action 'LSBR' (noprec):   reduce expr_list --> ref_value
    action 'RSBR' (noprec):   reduce expr_list --> ref_value
    action 'LCBR' (noprec):   reduce expr_list --> ref_value
    action 'RCBR' (noprec):   reduce expr_list --> ref_value
    action 'COMMA' (noprec):   reduce expr_list --> ref_value
    action 'COLON' (noprec):   reduce expr_list --> ref_value
    action 'SEMICOLON' (noprec):   reduce expr_list --> ref_value
    action 'ASSIGN' (noprec):   reduce expr_list --> ref_value
    action 'T_BYTE' (noprec):   reduce expr_list --> ref_value
    action 'T_ELSE' (noprec):   reduce expr_list --> ref_value
    action 'T_FALSE' (noprec):   reduce expr_list --> ref_value
    action 'T_IF' (noprec):   reduce expr_list --> ref_value
    action 'T_INT' (noprec):   reduce expr_list --> ref_value
    action 'T_PROC' (noprec):   reduce expr_list --> ref_value
    action 'T_REF' (noprec):   reduce expr_list --> ref_value
    action 'T_RETURN' (noprec):   reduce expr_list --> ref_value
    action 'T_WHILE' (noprec):   reduce expr_list --> ref_value
    action 'T_TRUE' (noprec):   reduce expr_list --> ref_value
    action 'T_EOF' (noprec):   reduce expr_list --> ref_value
    action 'ID' (noprec):   reduce expr_list --> ref_value
    action 'STRING' (noprec):   reduce expr_list --> ref_value
    action 'INT' (noprec):   reduce expr_list --> ref_value
    action 'BYTE' (noprec):   reduce expr_list --> ref_value
    action 'error' (noprec):   reduce expr_list --> ref_value
    action '#' (noprec):   reduce expr_list --> ref_value
    action '$$' (noprec):   reduce expr_list --> ref_value

  immediate action:   reduce expr_list --> ref_value
 gotos:

state 107:
  items:
    expr_list -> expr_list 'COMMA' . expr
    expr_list -> expr_list 'COMMA' . ref_value

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 99
    action 'STRING' (noprec):   shift 155
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 108
    goto ref_value: 109
    goto l_value: 112

state 108:
  items:
    expr_list -> expr_list 'COMMA' expr . 
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'NE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'LT' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'LE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'GT' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'GE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'AND' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'OR' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'LPAREN' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'RPAREN' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'LSBR' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'RSBR' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'LCBR' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'RCBR' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'COMMA' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'COLON' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'SEMICOLON' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'ASSIGN' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_BYTE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_ELSE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_FALSE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_IF' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_INT' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_PROC' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_REF' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_RETURN' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_WHILE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_TRUE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'T_EOF' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'ID' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'STRING' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'INT' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'BYTE' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action 'error' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action '#' (noprec):   reduce expr_list --> expr_list 'COMMA' expr
    action '$$' (noprec):   reduce expr_list --> expr_list 'COMMA' expr

  immediate action: <none>
 gotos:

state 109:
  items:
    expr_list -> expr_list 'COMMA' ref_value . 

  actions:
    action 'EQ' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'NE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'LT' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'LE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'GT' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'GE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'PLUS' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'MINUS' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'ASTER' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'SLASH' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'MOD' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'NOT' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'AND' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'OR' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'LPAREN' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'RPAREN' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'LSBR' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'RSBR' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'LCBR' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'RCBR' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'COMMA' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'COLON' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'SEMICOLON' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'ASSIGN' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_BYTE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_ELSE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_FALSE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_IF' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_INT' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_PROC' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_REF' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_RETURN' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_WHILE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_TRUE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'T_EOF' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'ID' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'STRING' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'INT' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'BYTE' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action 'error' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action '#' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value
    action '$$' (noprec):   reduce expr_list --> expr_list 'COMMA' ref_value

  immediate action:   reduce expr_list --> expr_list 'COMMA' ref_value
 gotos:

state 110:
  items:
    expr -> 'INT' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> 'INT'
    action 'NE' (noprec):   reduce expr --> 'INT'
    action 'LT' (noprec):   reduce expr --> 'INT'
    action 'LE' (noprec):   reduce expr --> 'INT'
    action 'GT' (noprec):   reduce expr --> 'INT'
    action 'GE' (noprec):   reduce expr --> 'INT'
    action 'PLUS' (noprec):   reduce expr --> 'INT'
    action 'MINUS' (noprec):   reduce expr --> 'INT'
    action 'ASTER' (noprec):   reduce expr --> 'INT'
    action 'SLASH' (noprec):   reduce expr --> 'INT'
    action 'MOD' (noprec):   reduce expr --> 'INT'
    action 'NOT' (noprec):   reduce expr --> 'INT'
    action 'AND' (noprec):   reduce expr --> 'INT'
    action 'OR' (noprec):   reduce expr --> 'INT'
    action 'LPAREN' (noprec):   reduce expr --> 'INT'
    action 'RPAREN' (noprec):   reduce expr --> 'INT'
    action 'LSBR' (noprec):   reduce expr --> 'INT'
    action 'RSBR' (noprec):   reduce expr --> 'INT'
    action 'LCBR' (noprec):   reduce expr --> 'INT'
    action 'RCBR' (noprec):   reduce expr --> 'INT'
    action 'COMMA' (noprec):   reduce expr --> 'INT'
    action 'COLON' (noprec):   reduce expr --> 'INT'
    action 'SEMICOLON' (noprec):   reduce expr --> 'INT'
    action 'ASSIGN' (noprec):   reduce expr --> 'INT'
    action 'T_BYTE' (noprec):   reduce expr --> 'INT'
    action 'T_ELSE' (noprec):   reduce expr --> 'INT'
    action 'T_FALSE' (noprec):   reduce expr --> 'INT'
    action 'T_IF' (noprec):   reduce expr --> 'INT'
    action 'T_INT' (noprec):   reduce expr --> 'INT'
    action 'T_PROC' (noprec):   reduce expr --> 'INT'
    action 'T_REF' (noprec):   reduce expr --> 'INT'
    action 'T_RETURN' (noprec):   reduce expr --> 'INT'
    action 'T_WHILE' (noprec):   reduce expr --> 'INT'
    action 'T_TRUE' (noprec):   reduce expr --> 'INT'
    action 'T_EOF' (noprec):   reduce expr --> 'INT'
    action 'ID' (noprec):   reduce expr --> 'INT'
    action 'STRING' (noprec):   reduce expr --> 'INT'
    action 'INT' (noprec):   reduce expr --> 'INT'
    action 'BYTE' (noprec):   reduce expr --> 'INT'
    action 'error' (noprec):   reduce expr --> 'INT'
    action '#' (noprec):   reduce expr --> 'INT'
    action '$$' (noprec):   reduce expr --> 'INT'

  immediate action:   reduce expr --> 'INT'
 gotos:

state 111:
  items:
    expr -> 'BYTE' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> 'BYTE'
    action 'NE' (noprec):   reduce expr --> 'BYTE'
    action 'LT' (noprec):   reduce expr --> 'BYTE'
    action 'LE' (noprec):   reduce expr --> 'BYTE'
    action 'GT' (noprec):   reduce expr --> 'BYTE'
    action 'GE' (noprec):   reduce expr --> 'BYTE'
    action 'PLUS' (noprec):   reduce expr --> 'BYTE'
    action 'MINUS' (noprec):   reduce expr --> 'BYTE'
    action 'ASTER' (noprec):   reduce expr --> 'BYTE'
    action 'SLASH' (noprec):   reduce expr --> 'BYTE'
    action 'MOD' (noprec):   reduce expr --> 'BYTE'
    action 'NOT' (noprec):   reduce expr --> 'BYTE'
    action 'AND' (noprec):   reduce expr --> 'BYTE'
    action 'OR' (noprec):   reduce expr --> 'BYTE'
    action 'LPAREN' (noprec):   reduce expr --> 'BYTE'
    action 'RPAREN' (noprec):   reduce expr --> 'BYTE'
    action 'LSBR' (noprec):   reduce expr --> 'BYTE'
    action 'RSBR' (noprec):   reduce expr --> 'BYTE'
    action 'LCBR' (noprec):   reduce expr --> 'BYTE'
    action 'RCBR' (noprec):   reduce expr --> 'BYTE'
    action 'COMMA' (noprec):   reduce expr --> 'BYTE'
    action 'COLON' (noprec):   reduce expr --> 'BYTE'
    action 'SEMICOLON' (noprec):   reduce expr --> 'BYTE'
    action 'ASSIGN' (noprec):   reduce expr --> 'BYTE'
    action 'T_BYTE' (noprec):   reduce expr --> 'BYTE'
    action 'T_ELSE' (noprec):   reduce expr --> 'BYTE'
    action 'T_FALSE' (noprec):   reduce expr --> 'BYTE'
    action 'T_IF' (noprec):   reduce expr --> 'BYTE'
    action 'T_INT' (noprec):   reduce expr --> 'BYTE'
    action 'T_PROC' (noprec):   reduce expr --> 'BYTE'
    action 'T_REF' (noprec):   reduce expr --> 'BYTE'
    action 'T_RETURN' (noprec):   reduce expr --> 'BYTE'
    action 'T_WHILE' (noprec):   reduce expr --> 'BYTE'
    action 'T_TRUE' (noprec):   reduce expr --> 'BYTE'
    action 'T_EOF' (noprec):   reduce expr --> 'BYTE'
    action 'ID' (noprec):   reduce expr --> 'BYTE'
    action 'STRING' (noprec):   reduce expr --> 'BYTE'
    action 'INT' (noprec):   reduce expr --> 'BYTE'
    action 'BYTE' (noprec):   reduce expr --> 'BYTE'
    action 'error' (noprec):   reduce expr --> 'BYTE'
    action '#' (noprec):   reduce expr --> 'BYTE'
    action '$$' (noprec):   reduce expr --> 'BYTE'

  immediate action:   reduce expr --> 'BYTE'
 gotos:

state 112:
  items:
    expr -> l_value . 

  actions:
    action 'EQ' (noprec):   reduce expr --> l_value
    action 'NE' (noprec):   reduce expr --> l_value
    action 'LT' (noprec):   reduce expr --> l_value
    action 'LE' (noprec):   reduce expr --> l_value
    action 'GT' (noprec):   reduce expr --> l_value
    action 'GE' (noprec):   reduce expr --> l_value
    action 'PLUS' (noprec):   reduce expr --> l_value
    action 'MINUS' (noprec):   reduce expr --> l_value
    action 'ASTER' (noprec):   reduce expr --> l_value
    action 'SLASH' (noprec):   reduce expr --> l_value
    action 'MOD' (noprec):   reduce expr --> l_value
    action 'NOT' (noprec):   reduce expr --> l_value
    action 'AND' (noprec):   reduce expr --> l_value
    action 'OR' (noprec):   reduce expr --> l_value
    action 'LPAREN' (noprec):   reduce expr --> l_value
    action 'RPAREN' (noprec):   reduce expr --> l_value
    action 'LSBR' (noprec):   reduce expr --> l_value
    action 'RSBR' (noprec):   reduce expr --> l_value
    action 'LCBR' (noprec):   reduce expr --> l_value
    action 'RCBR' (noprec):   reduce expr --> l_value
    action 'COMMA' (noprec):   reduce expr --> l_value
    action 'COLON' (noprec):   reduce expr --> l_value
    action 'SEMICOLON' (noprec):   reduce expr --> l_value
    action 'ASSIGN' (noprec):   reduce expr --> l_value
    action 'T_BYTE' (noprec):   reduce expr --> l_value
    action 'T_ELSE' (noprec):   reduce expr --> l_value
    action 'T_FALSE' (noprec):   reduce expr --> l_value
    action 'T_IF' (noprec):   reduce expr --> l_value
    action 'T_INT' (noprec):   reduce expr --> l_value
    action 'T_PROC' (noprec):   reduce expr --> l_value
    action 'T_REF' (noprec):   reduce expr --> l_value
    action 'T_RETURN' (noprec):   reduce expr --> l_value
    action 'T_WHILE' (noprec):   reduce expr --> l_value
    action 'T_TRUE' (noprec):   reduce expr --> l_value
    action 'T_EOF' (noprec):   reduce expr --> l_value
    action 'ID' (noprec):   reduce expr --> l_value
    action 'STRING' (noprec):   reduce expr --> l_value
    action 'INT' (noprec):   reduce expr --> l_value
    action 'BYTE' (noprec):   reduce expr --> l_value
    action 'error' (noprec):   reduce expr --> l_value
    action '#' (noprec):   reduce expr --> l_value
    action '$$' (noprec):   reduce expr --> l_value

  immediate action:   reduce expr --> l_value
 gotos:

state 113:
  items:
    expr -> 'LPAREN' . expr 'RPAREN'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 115
    goto l_value: 112

state 114:
  items:
    expr -> 'LPAREN' . expr 'RPAREN'
    cond -> 'LPAREN' . cond 'RPAREN'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 116
    goto l_value: 112
    goto cond: 160

state 115:
  items:
    expr -> 'LPAREN' expr . 'RPAREN'
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 117
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 116:
  items:
    expr -> 'LPAREN' expr . 'RPAREN'
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'
    cond -> expr . compop expr
    cond -> expr . compop 'error'

  actions:
    action 'EQ' (explicit nonassoc 9997):   shift 170
    action 'NE' (explicit nonassoc 9997):   shift 171
    action 'LT' (explicit nonassoc 9997):   shift 172
    action 'LE' (explicit nonassoc 9997):   shift 174
    action 'GT' (explicit nonassoc 9997):   shift 173
    action 'GE' (explicit nonassoc 9997):   shift 175
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 117
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto compop: 164

state 117:
  items:
    expr -> 'LPAREN' expr 'RPAREN' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'NE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'LT' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'LE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'GT' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'GE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'PLUS' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'MINUS' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'ASTER' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'SLASH' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'MOD' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'NOT' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'AND' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'OR' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'LPAREN' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'RPAREN' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'LSBR' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'RSBR' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'LCBR' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'RCBR' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'COMMA' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'COLON' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'SEMICOLON' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'ASSIGN' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_BYTE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_ELSE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_FALSE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_IF' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_INT' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_PROC' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_REF' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_RETURN' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_WHILE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_TRUE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'T_EOF' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'ID' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'STRING' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'INT' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'BYTE' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action 'error' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action '#' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'
    action '$$' (noprec):   reduce expr --> 'LPAREN' expr 'RPAREN'

  immediate action:   reduce expr --> 'LPAREN' expr 'RPAREN'
 gotos:

state 118:
  items:
    expr -> func_call . 

  actions:
    action 'EQ' (noprec):   reduce expr --> func_call
    action 'NE' (noprec):   reduce expr --> func_call
    action 'LT' (noprec):   reduce expr --> func_call
    action 'LE' (noprec):   reduce expr --> func_call
    action 'GT' (noprec):   reduce expr --> func_call
    action 'GE' (noprec):   reduce expr --> func_call
    action 'PLUS' (noprec):   reduce expr --> func_call
    action 'MINUS' (noprec):   reduce expr --> func_call
    action 'ASTER' (noprec):   reduce expr --> func_call
    action 'SLASH' (noprec):   reduce expr --> func_call
    action 'MOD' (noprec):   reduce expr --> func_call
    action 'NOT' (noprec):   reduce expr --> func_call
    action 'AND' (noprec):   reduce expr --> func_call
    action 'OR' (noprec):   reduce expr --> func_call
    action 'LPAREN' (noprec):   reduce expr --> func_call
    action 'RPAREN' (noprec):   reduce expr --> func_call
    action 'LSBR' (noprec):   reduce expr --> func_call
    action 'RSBR' (noprec):   reduce expr --> func_call
    action 'LCBR' (noprec):   reduce expr --> func_call
    action 'RCBR' (noprec):   reduce expr --> func_call
    action 'COMMA' (noprec):   reduce expr --> func_call
    action 'COLON' (noprec):   reduce expr --> func_call
    action 'SEMICOLON' (noprec):   reduce expr --> func_call
    action 'ASSIGN' (noprec):   reduce expr --> func_call
    action 'T_BYTE' (noprec):   reduce expr --> func_call
    action 'T_ELSE' (noprec):   reduce expr --> func_call
    action 'T_FALSE' (noprec):   reduce expr --> func_call
    action 'T_IF' (noprec):   reduce expr --> func_call
    action 'T_INT' (noprec):   reduce expr --> func_call
    action 'T_PROC' (noprec):   reduce expr --> func_call
    action 'T_REF' (noprec):   reduce expr --> func_call
    action 'T_RETURN' (noprec):   reduce expr --> func_call
    action 'T_WHILE' (noprec):   reduce expr --> func_call
    action 'T_TRUE' (noprec):   reduce expr --> func_call
    action 'T_EOF' (noprec):   reduce expr --> func_call
    action 'ID' (noprec):   reduce expr --> func_call
    action 'STRING' (noprec):   reduce expr --> func_call
    action 'INT' (noprec):   reduce expr --> func_call
    action 'BYTE' (noprec):   reduce expr --> func_call
    action 'error' (noprec):   reduce expr --> func_call
    action '#' (noprec):   reduce expr --> func_call
    action '$$' (noprec):   reduce expr --> func_call

  immediate action:   reduce expr --> func_call
 gotos:

state 119:
  items:
    expr -> 'PLUS' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 120
    goto l_value: 112

state 120:
  items:
    expr -> 'PLUS' expr . 
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'NE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'LT' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'LE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'GT' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'GE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'PLUS' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'MINUS' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'ASTER' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'SLASH' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'MOD' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'NOT' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'AND' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'OR' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'LPAREN' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'RPAREN' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'LSBR' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'RSBR' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'LCBR' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'RCBR' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'COMMA' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'COLON' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'SEMICOLON' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'ASSIGN' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_BYTE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_ELSE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_FALSE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_IF' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_INT' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_PROC' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_REF' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_RETURN' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_WHILE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_TRUE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'T_EOF' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'ID' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'STRING' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'INT' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'BYTE' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action 'error' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action '#' (explicit left 10000):   reduce expr --> 'PLUS' expr
    action '$$' (explicit left 10000):   reduce expr --> 'PLUS' expr

  immediate action: <none>
 gotos:

state 121:
  items:
    expr -> 'MINUS' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 122
    goto l_value: 112

state 122:
  items:
    expr -> 'MINUS' expr . 
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'NE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'LT' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'LE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'GT' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'GE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'PLUS' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'MINUS' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'ASTER' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'SLASH' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'MOD' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'NOT' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'AND' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'OR' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'LPAREN' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'RPAREN' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'LSBR' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'RSBR' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'LCBR' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'RCBR' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'COMMA' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'COLON' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'SEMICOLON' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'ASSIGN' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_BYTE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_ELSE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_FALSE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_IF' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_INT' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_PROC' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_REF' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_RETURN' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_WHILE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_TRUE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'T_EOF' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'ID' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'STRING' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'INT' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'BYTE' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action 'error' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action '#' (explicit left 10000):   reduce expr --> 'MINUS' expr
    action '$$' (explicit left 10000):   reduce expr --> 'MINUS' expr

  immediate action: <none>
 gotos:

state 123:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr 'MINUS' expr . 
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'NE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'LT' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'LE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'GT' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'GE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'PLUS' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'MINUS' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'AND' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'OR' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'LPAREN' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'RPAREN' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'LSBR' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'RSBR' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'LCBR' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'RCBR' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'COMMA' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'COLON' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'SEMICOLON' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'ASSIGN' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_BYTE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_ELSE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_FALSE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_IF' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_INT' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_PROC' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_REF' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_RETURN' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_WHILE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_TRUE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'T_EOF' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'ID' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'STRING' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'INT' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'BYTE' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action 'error' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action '#' (explicit left 9998):   reduce expr --> expr 'MINUS' expr
    action '$$' (explicit left 9998):   reduce expr --> expr 'MINUS' expr

  immediate action: <none>
 gotos:

state 124:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr 'PLUS' expr . 
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'NE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'LT' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'LE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'GT' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'GE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'PLUS' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'MINUS' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'AND' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'OR' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'LPAREN' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'RPAREN' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'LSBR' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'RSBR' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'LCBR' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'RCBR' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'COMMA' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'COLON' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'SEMICOLON' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'ASSIGN' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_BYTE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_ELSE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_FALSE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_IF' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_INT' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_PROC' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_REF' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_RETURN' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_WHILE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_TRUE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'T_EOF' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'ID' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'STRING' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'INT' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'BYTE' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action 'error' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action '#' (explicit left 9998):   reduce expr --> expr 'PLUS' expr
    action '$$' (explicit left 9998):   reduce expr --> expr 'PLUS' expr

  immediate action: <none>
 gotos:

state 125:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr 'ASTER' expr . 
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'NE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'LT' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'LE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'GT' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'GE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'MOD' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'NOT' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'AND' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'OR' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'COLON' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'ID' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'STRING' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'INT' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action 'error' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action '#' (explicit left 9999):   reduce expr --> expr 'ASTER' expr
    action '$$' (explicit left 9999):   reduce expr --> expr 'ASTER' expr

  immediate action: <none>
 gotos:

state 126:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr 'SLASH' expr . 
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'NE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'LT' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'LE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'GT' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'GE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'MOD' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'NOT' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'AND' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'OR' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'COLON' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'ID' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'STRING' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'INT' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action 'error' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action '#' (explicit left 9999):   reduce expr --> expr 'SLASH' expr
    action '$$' (explicit left 9999):   reduce expr --> expr 'SLASH' expr

  immediate action: <none>
 gotos:

state 127:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr 'MOD' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'NE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'LT' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'LE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'GT' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'GE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'MOD' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'NOT' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'AND' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'OR' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'COLON' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'ID' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'STRING' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'INT' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action 'error' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action '#' (explicit left 9999):   reduce expr --> expr 'MOD' expr
    action '$$' (explicit left 9999):   reduce expr --> expr 'MOD' expr

  immediate action: <none>
 gotos:

state 128:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> 'error' 'MINUS' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'NE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'LT' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'LE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'GT' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'GE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'PLUS' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'MINUS' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'AND' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'OR' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'LPAREN' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'RPAREN' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'LSBR' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'RSBR' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'LCBR' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'RCBR' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'COMMA' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'COLON' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'SEMICOLON' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'ASSIGN' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_BYTE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_ELSE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_FALSE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_IF' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_INT' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_PROC' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_REF' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_RETURN' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_WHILE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_TRUE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'T_EOF' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'ID' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'STRING' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'INT' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'BYTE' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action 'error' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action '#' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr
    action '$$' (explicit left 9998):   reduce expr --> 'error' 'MINUS' expr

  immediate action: <none>
 gotos:

state 129:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> 'error' 'PLUS' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'NE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'LT' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'LE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'GT' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'GE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'PLUS' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'MINUS' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'AND' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'OR' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'LPAREN' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'RPAREN' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'LSBR' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'RSBR' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'LCBR' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'RCBR' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'COMMA' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'COLON' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'SEMICOLON' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'ASSIGN' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_BYTE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_ELSE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_FALSE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_IF' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_INT' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_PROC' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_REF' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_RETURN' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_WHILE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_TRUE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'T_EOF' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'ID' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'STRING' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'INT' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'BYTE' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action 'error' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action '#' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr
    action '$$' (explicit left 9998):   reduce expr --> 'error' 'PLUS' expr

  immediate action: <none>
 gotos:

state 130:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> 'error' 'ASTER' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'NE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'LT' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'LE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'GT' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'GE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'MOD' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'NOT' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'AND' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'OR' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'COLON' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'ID' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'STRING' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'INT' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action 'error' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action '#' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr
    action '$$' (explicit left 9999):   reduce expr --> 'error' 'ASTER' expr

  immediate action: <none>
 gotos:

state 131:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> 'error' 'SLASH' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'NE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'LT' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'LE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'GT' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'GE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'MOD' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'NOT' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'AND' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'OR' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'COLON' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'ID' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'STRING' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'INT' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action 'error' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action '#' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr
    action '$$' (explicit left 9999):   reduce expr --> 'error' 'SLASH' expr

  immediate action: <none>
 gotos:

state 132:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> 'error' 'MOD' expr . 
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'

  actions:
    action 'EQ' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'NE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'LT' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'LE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'GT' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'GE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'PLUS' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'MINUS' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'ASTER' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'SLASH' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'MOD' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'NOT' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'AND' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'OR' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'LPAREN' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'RPAREN' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'LSBR' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'RSBR' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'LCBR' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'RCBR' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'COMMA' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'COLON' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'SEMICOLON' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'ASSIGN' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_BYTE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_ELSE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_FALSE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_IF' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_INT' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_PROC' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_REF' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_RETURN' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_WHILE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_TRUE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'T_EOF' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'ID' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'STRING' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'INT' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'BYTE' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action 'error' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action '#' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr
    action '$$' (explicit left 9999):   reduce expr --> 'error' 'MOD' expr

  immediate action: <none>
 gotos:

state 133:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'
    l_value -> 'ID' 'LSBR' expr . 'RSBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   shift 157
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 134:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'
    cond -> expr . compop expr
    cond -> expr . compop 'error'

  actions:
    action 'EQ' (explicit nonassoc 9997):   shift 170
    action 'NE' (explicit nonassoc 9997):   shift 171
    action 'LT' (explicit nonassoc 9997):   shift 172
    action 'LE' (explicit nonassoc 9997):   shift 174
    action 'GT' (explicit nonassoc 9997):   shift 173
    action 'GE' (explicit nonassoc 9997):   shift 175
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto compop: 164

state 135:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'
    cond -> expr compop expr . 

  actions:
    action 'EQ' (noprec):   reduce cond --> expr compop expr
    action 'NE' (noprec):   reduce cond --> expr compop expr
    action 'LT' (noprec):   reduce cond --> expr compop expr
    action 'LE' (noprec):   reduce cond --> expr compop expr
    action 'GT' (noprec):   reduce cond --> expr compop expr
    action 'GE' (noprec):   reduce cond --> expr compop expr
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   reduce cond --> expr compop expr
    action 'AND' (noprec):   reduce cond --> expr compop expr
    action 'OR' (noprec):   reduce cond --> expr compop expr
    action 'LPAREN' (noprec):   reduce cond --> expr compop expr
    action 'RPAREN' (noprec):   reduce cond --> expr compop expr
    action 'LSBR' (noprec):   reduce cond --> expr compop expr
    action 'RSBR' (noprec):   reduce cond --> expr compop expr
    action 'LCBR' (noprec):   reduce cond --> expr compop expr
    action 'RCBR' (noprec):   reduce cond --> expr compop expr
    action 'COMMA' (noprec):   reduce cond --> expr compop expr
    action 'COLON' (noprec):   reduce cond --> expr compop expr
    action 'SEMICOLON' (noprec):   reduce cond --> expr compop expr
    action 'ASSIGN' (noprec):   reduce cond --> expr compop expr
    action 'T_BYTE' (noprec):   reduce cond --> expr compop expr
    action 'T_ELSE' (noprec):   reduce cond --> expr compop expr
    action 'T_FALSE' (noprec):   reduce cond --> expr compop expr
    action 'T_IF' (noprec):   reduce cond --> expr compop expr
    action 'T_INT' (noprec):   reduce cond --> expr compop expr
    action 'T_PROC' (noprec):   reduce cond --> expr compop expr
    action 'T_REF' (noprec):   reduce cond --> expr compop expr
    action 'T_RETURN' (noprec):   reduce cond --> expr compop expr
    action 'T_WHILE' (noprec):   reduce cond --> expr compop expr
    action 'T_TRUE' (noprec):   reduce cond --> expr compop expr
    action 'T_EOF' (noprec):   reduce cond --> expr compop expr
    action 'ID' (noprec):   reduce cond --> expr compop expr
    action 'STRING' (noprec):   reduce cond --> expr compop expr
    action 'INT' (noprec):   reduce cond --> expr compop expr
    action 'BYTE' (noprec):   reduce cond --> expr compop expr
    action 'error' (noprec):   reduce cond --> expr compop expr
    action '#' (noprec):   reduce cond --> expr compop expr
    action '$$' (noprec):   reduce cond --> expr compop expr

  immediate action: <none>
 gotos:

state 136:
  items:
    expr -> expr . 'MINUS' expr
    expr -> expr . 'PLUS' expr
    expr -> expr . 'ASTER' expr
    expr -> expr . 'SLASH' expr
    expr -> expr . 'MOD' expr
    expr -> expr . 'MINUS' 'error'
    expr -> expr . 'PLUS' 'error'
    expr -> expr . 'ASTER' 'error'
    expr -> expr . 'SLASH' 'error'
    expr -> expr . 'MOD' 'error'
    cond -> 'error' compop expr . 

  actions:
    action 'EQ' (noprec):   reduce cond --> 'error' compop expr
    action 'NE' (noprec):   reduce cond --> 'error' compop expr
    action 'LT' (noprec):   reduce cond --> 'error' compop expr
    action 'LE' (noprec):   reduce cond --> 'error' compop expr
    action 'GT' (noprec):   reduce cond --> 'error' compop expr
    action 'GE' (noprec):   reduce cond --> 'error' compop expr
    action 'PLUS' (explicit left 9998):   shift 138
    action 'MINUS' (explicit left 9998):   shift 137
    action 'ASTER' (explicit left 9999):   shift 139
    action 'SLASH' (explicit left 9999):   shift 140
    action 'MOD' (explicit left 9999):   shift 141
    action 'NOT' (noprec):   reduce cond --> 'error' compop expr
    action 'AND' (noprec):   reduce cond --> 'error' compop expr
    action 'OR' (noprec):   reduce cond --> 'error' compop expr
    action 'LPAREN' (noprec):   reduce cond --> 'error' compop expr
    action 'RPAREN' (noprec):   reduce cond --> 'error' compop expr
    action 'LSBR' (noprec):   reduce cond --> 'error' compop expr
    action 'RSBR' (noprec):   reduce cond --> 'error' compop expr
    action 'LCBR' (noprec):   reduce cond --> 'error' compop expr
    action 'RCBR' (noprec):   reduce cond --> 'error' compop expr
    action 'COMMA' (noprec):   reduce cond --> 'error' compop expr
    action 'COLON' (noprec):   reduce cond --> 'error' compop expr
    action 'SEMICOLON' (noprec):   reduce cond --> 'error' compop expr
    action 'ASSIGN' (noprec):   reduce cond --> 'error' compop expr
    action 'T_BYTE' (noprec):   reduce cond --> 'error' compop expr
    action 'T_ELSE' (noprec):   reduce cond --> 'error' compop expr
    action 'T_FALSE' (noprec):   reduce cond --> 'error' compop expr
    action 'T_IF' (noprec):   reduce cond --> 'error' compop expr
    action 'T_INT' (noprec):   reduce cond --> 'error' compop expr
    action 'T_PROC' (noprec):   reduce cond --> 'error' compop expr
    action 'T_REF' (noprec):   reduce cond --> 'error' compop expr
    action 'T_RETURN' (noprec):   reduce cond --> 'error' compop expr
    action 'T_WHILE' (noprec):   reduce cond --> 'error' compop expr
    action 'T_TRUE' (noprec):   reduce cond --> 'error' compop expr
    action 'T_EOF' (noprec):   reduce cond --> 'error' compop expr
    action 'ID' (noprec):   reduce cond --> 'error' compop expr
    action 'STRING' (noprec):   reduce cond --> 'error' compop expr
    action 'INT' (noprec):   reduce cond --> 'error' compop expr
    action 'BYTE' (noprec):   reduce cond --> 'error' compop expr
    action 'error' (noprec):   reduce cond --> 'error' compop expr
    action '#' (noprec):   reduce cond --> 'error' compop expr
    action '$$' (noprec):   reduce cond --> 'error' compop expr

  immediate action: <none>
 gotos:

state 137:
  items:
    expr -> expr 'MINUS' . expr
    expr -> expr 'MINUS' . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 143
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 123
    goto l_value: 112

state 138:
  items:
    expr -> expr 'PLUS' . expr
    expr -> expr 'PLUS' . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 144
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 124
    goto l_value: 112

state 139:
  items:
    expr -> expr 'ASTER' . expr
    expr -> expr 'ASTER' . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 145
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 125
    goto l_value: 112

state 140:
  items:
    expr -> expr 'SLASH' . expr
    expr -> expr 'SLASH' . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 146
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 126
    goto l_value: 112

state 141:
  items:
    expr -> expr 'MOD' . expr
    expr -> expr 'MOD' . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 147
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 127
    goto l_value: 112

state 142:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 143:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    expr -> expr 'MINUS' 'error' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'NE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'LT' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'LE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'GT' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'GE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'AND' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'OR' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'LPAREN' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'RPAREN' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'LSBR' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'RSBR' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'LCBR' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'RCBR' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'COMMA' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'COLON' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'SEMICOLON' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'ASSIGN' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_BYTE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_ELSE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_FALSE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_IF' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_INT' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_PROC' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_REF' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_RETURN' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_WHILE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_TRUE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'T_EOF' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'ID' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'STRING' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'INT' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'BYTE' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action 'error' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action '#' (noprec):   reduce expr --> expr 'MINUS' 'error'
    action '$$' (noprec):   reduce expr --> expr 'MINUS' 'error'

  immediate action: <none>
 gotos:

state 144:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    expr -> expr 'PLUS' 'error' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'NE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'LT' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'LE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'GT' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'GE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'AND' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'OR' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'LPAREN' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'RPAREN' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'LSBR' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'RSBR' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'LCBR' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'RCBR' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'COMMA' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'COLON' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'SEMICOLON' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'ASSIGN' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_BYTE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_ELSE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_FALSE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_IF' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_INT' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_PROC' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_REF' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_RETURN' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_WHILE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_TRUE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'T_EOF' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'ID' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'STRING' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'INT' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'BYTE' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action 'error' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action '#' (noprec):   reduce expr --> expr 'PLUS' 'error'
    action '$$' (noprec):   reduce expr --> expr 'PLUS' 'error'

  immediate action: <none>
 gotos:

state 145:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    expr -> expr 'ASTER' 'error' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'NE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'LT' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'LE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'GT' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'GE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'AND' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'OR' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'LPAREN' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'RPAREN' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'LSBR' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'RSBR' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'LCBR' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'RCBR' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'COMMA' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'COLON' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'SEMICOLON' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'ASSIGN' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_BYTE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_ELSE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_FALSE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_IF' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_INT' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_PROC' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_REF' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_RETURN' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_WHILE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_TRUE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'T_EOF' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'ID' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'STRING' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'INT' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'BYTE' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action 'error' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action '#' (noprec):   reduce expr --> expr 'ASTER' 'error'
    action '$$' (noprec):   reduce expr --> expr 'ASTER' 'error'

  immediate action: <none>
 gotos:

state 146:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    expr -> expr 'SLASH' 'error' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'NE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'LT' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'LE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'GT' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'GE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'AND' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'OR' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'LPAREN' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'RPAREN' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'LSBR' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'RSBR' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'LCBR' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'RCBR' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'COMMA' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'COLON' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'SEMICOLON' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'ASSIGN' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_BYTE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_ELSE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_FALSE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_IF' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_INT' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_PROC' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_REF' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_RETURN' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_WHILE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_TRUE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'T_EOF' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'ID' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'STRING' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'INT' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'BYTE' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action 'error' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action '#' (noprec):   reduce expr --> expr 'SLASH' 'error'
    action '$$' (noprec):   reduce expr --> expr 'SLASH' 'error'

  immediate action: <none>
 gotos:

state 147:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    expr -> expr 'MOD' 'error' . 

  actions:
    action 'EQ' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'NE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'LT' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'LE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'GT' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'GE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'AND' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'OR' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'LPAREN' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'RPAREN' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'LSBR' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'RSBR' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'LCBR' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'RCBR' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'COMMA' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'COLON' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'SEMICOLON' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'ASSIGN' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_BYTE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_ELSE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_FALSE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_IF' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_INT' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_PROC' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_REF' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_RETURN' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_WHILE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_TRUE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'T_EOF' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'ID' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'STRING' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'INT' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'BYTE' (noprec):   reduce expr --> expr 'MOD' 'error'
    action 'error' (noprec):   reduce expr --> expr 'MOD' 'error'
    action '#' (noprec):   reduce expr --> expr 'MOD' 'error'
    action '$$' (noprec):   reduce expr --> expr 'MOD' 'error'

  immediate action: <none>
 gotos:

state 148:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    cond -> expr compop 'error' . 

  actions:
    action 'EQ' (noprec):   reduce cond --> expr compop 'error'
    action 'NE' (noprec):   reduce cond --> expr compop 'error'
    action 'LT' (noprec):   reduce cond --> expr compop 'error'
    action 'LE' (noprec):   reduce cond --> expr compop 'error'
    action 'GT' (noprec):   reduce cond --> expr compop 'error'
    action 'GE' (noprec):   reduce cond --> expr compop 'error'
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   reduce cond --> expr compop 'error'
    action 'AND' (noprec):   reduce cond --> expr compop 'error'
    action 'OR' (noprec):   reduce cond --> expr compop 'error'
    action 'LPAREN' (noprec):   reduce cond --> expr compop 'error'
    action 'RPAREN' (noprec):   reduce cond --> expr compop 'error'
    action 'LSBR' (noprec):   reduce cond --> expr compop 'error'
    action 'RSBR' (noprec):   reduce cond --> expr compop 'error'
    action 'LCBR' (noprec):   reduce cond --> expr compop 'error'
    action 'RCBR' (noprec):   reduce cond --> expr compop 'error'
    action 'COMMA' (noprec):   reduce cond --> expr compop 'error'
    action 'COLON' (noprec):   reduce cond --> expr compop 'error'
    action 'SEMICOLON' (noprec):   reduce cond --> expr compop 'error'
    action 'ASSIGN' (noprec):   reduce cond --> expr compop 'error'
    action 'T_BYTE' (noprec):   reduce cond --> expr compop 'error'
    action 'T_ELSE' (noprec):   reduce cond --> expr compop 'error'
    action 'T_FALSE' (noprec):   reduce cond --> expr compop 'error'
    action 'T_IF' (noprec):   reduce cond --> expr compop 'error'
    action 'T_INT' (noprec):   reduce cond --> expr compop 'error'
    action 'T_PROC' (noprec):   reduce cond --> expr compop 'error'
    action 'T_REF' (noprec):   reduce cond --> expr compop 'error'
    action 'T_RETURN' (noprec):   reduce cond --> expr compop 'error'
    action 'T_WHILE' (noprec):   reduce cond --> expr compop 'error'
    action 'T_TRUE' (noprec):   reduce cond --> expr compop 'error'
    action 'T_EOF' (noprec):   reduce cond --> expr compop 'error'
    action 'ID' (noprec):   reduce cond --> expr compop 'error'
    action 'STRING' (noprec):   reduce cond --> expr compop 'error'
    action 'INT' (noprec):   reduce cond --> expr compop 'error'
    action 'BYTE' (noprec):   reduce cond --> expr compop 'error'
    action 'error' (noprec):   reduce cond --> expr compop 'error'
    action '#' (noprec):   reduce cond --> expr compop 'error'
    action '$$' (noprec):   reduce cond --> expr compop 'error'

  immediate action: <none>
 gotos:

state 149:
  items:
    expr -> 'error' . 'MINUS' expr
    expr -> 'error' . 'PLUS' expr
    expr -> 'error' . 'ASTER' expr
    expr -> 'error' . 'SLASH' expr
    expr -> 'error' . 'MOD' expr
    cond -> 'error' . compop expr

  actions:
    action 'EQ' (explicit nonassoc 9997):   shift 170
    action 'NE' (explicit nonassoc 9997):   shift 171
    action 'LT' (explicit nonassoc 9997):   shift 172
    action 'LE' (explicit nonassoc 9997):   shift 174
    action 'GT' (explicit nonassoc 9997):   shift 173
    action 'GE' (explicit nonassoc 9997):   shift 175
    action 'PLUS' (explicit left 9998):   shift 151
    action 'MINUS' (explicit left 9998):   shift 150
    action 'ASTER' (explicit left 9999):   shift 152
    action 'SLASH' (explicit left 9999):   shift 153
    action 'MOD' (explicit left 9999):   shift 154
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto compop: 169

state 150:
  items:
    expr -> 'error' 'MINUS' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 128
    goto l_value: 112

state 151:
  items:
    expr -> 'error' 'PLUS' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 129
    goto l_value: 112

state 152:
  items:
    expr -> 'error' 'ASTER' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 130
    goto l_value: 112

state 153:
  items:
    expr -> 'error' 'SLASH' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 131
    goto l_value: 112

state 154:
  items:
    expr -> 'error' 'MOD' . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 132
    goto l_value: 112

state 155:
  items:
    ref_value -> 'STRING' . 

  actions:
    action 'EQ' (noprec):   reduce ref_value --> 'STRING'
    action 'NE' (noprec):   reduce ref_value --> 'STRING'
    action 'LT' (noprec):   reduce ref_value --> 'STRING'
    action 'LE' (noprec):   reduce ref_value --> 'STRING'
    action 'GT' (noprec):   reduce ref_value --> 'STRING'
    action 'GE' (noprec):   reduce ref_value --> 'STRING'
    action 'PLUS' (noprec):   reduce ref_value --> 'STRING'
    action 'MINUS' (noprec):   reduce ref_value --> 'STRING'
    action 'ASTER' (noprec):   reduce ref_value --> 'STRING'
    action 'SLASH' (noprec):   reduce ref_value --> 'STRING'
    action 'MOD' (noprec):   reduce ref_value --> 'STRING'
    action 'NOT' (noprec):   reduce ref_value --> 'STRING'
    action 'AND' (noprec):   reduce ref_value --> 'STRING'
    action 'OR' (noprec):   reduce ref_value --> 'STRING'
    action 'LPAREN' (noprec):   reduce ref_value --> 'STRING'
    action 'RPAREN' (noprec):   reduce ref_value --> 'STRING'
    action 'LSBR' (noprec):   reduce ref_value --> 'STRING'
    action 'RSBR' (noprec):   reduce ref_value --> 'STRING'
    action 'LCBR' (noprec):   reduce ref_value --> 'STRING'
    action 'RCBR' (noprec):   reduce ref_value --> 'STRING'
    action 'COMMA' (noprec):   reduce ref_value --> 'STRING'
    action 'COLON' (noprec):   reduce ref_value --> 'STRING'
    action 'SEMICOLON' (noprec):   reduce ref_value --> 'STRING'
    action 'ASSIGN' (noprec):   reduce ref_value --> 'STRING'
    action 'T_BYTE' (noprec):   reduce ref_value --> 'STRING'
    action 'T_ELSE' (noprec):   reduce ref_value --> 'STRING'
    action 'T_FALSE' (noprec):   reduce ref_value --> 'STRING'
    action 'T_IF' (noprec):   reduce ref_value --> 'STRING'
    action 'T_INT' (noprec):   reduce ref_value --> 'STRING'
    action 'T_PROC' (noprec):   reduce ref_value --> 'STRING'
    action 'T_REF' (noprec):   reduce ref_value --> 'STRING'
    action 'T_RETURN' (noprec):   reduce ref_value --> 'STRING'
    action 'T_WHILE' (noprec):   reduce ref_value --> 'STRING'
    action 'T_TRUE' (noprec):   reduce ref_value --> 'STRING'
    action 'T_EOF' (noprec):   reduce ref_value --> 'STRING'
    action 'ID' (noprec):   reduce ref_value --> 'STRING'
    action 'STRING' (noprec):   reduce ref_value --> 'STRING'
    action 'INT' (noprec):   reduce ref_value --> 'STRING'
    action 'BYTE' (noprec):   reduce ref_value --> 'STRING'
    action 'error' (noprec):   reduce ref_value --> 'STRING'
    action '#' (noprec):   reduce ref_value --> 'STRING'
    action '$$' (noprec):   reduce ref_value --> 'STRING'

  immediate action:   reduce ref_value --> 'STRING'
 gotos:

state 156:
  items:
    l_value -> 'ID' 'LSBR' . expr 'RSBR'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 133
    goto l_value: 112

state 157:
  items:
    l_value -> 'ID' 'LSBR' expr 'RSBR' . 

  actions:
    action 'EQ' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'NE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'LT' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'LE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'GT' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'GE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'PLUS' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'MINUS' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'ASTER' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'SLASH' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'MOD' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'NOT' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'AND' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'OR' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'LPAREN' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'RPAREN' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'LSBR' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'RSBR' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'LCBR' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'RCBR' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'COMMA' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'COLON' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'SEMICOLON' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'ASSIGN' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_BYTE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_ELSE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_FALSE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_IF' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_INT' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_PROC' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_REF' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_RETURN' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_WHILE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_TRUE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'T_EOF' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'ID' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'STRING' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'INT' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'BYTE' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action 'error' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action '#' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
    action '$$' (noprec):   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'

  immediate action:   reduce l_value --> 'ID' 'LSBR' expr 'RSBR'
 gotos:

state 158:
  items:
    cond -> 'T_TRUE' . 

  actions:
    action 'EQ' (noprec):   reduce cond --> 'T_TRUE'
    action 'NE' (noprec):   reduce cond --> 'T_TRUE'
    action 'LT' (noprec):   reduce cond --> 'T_TRUE'
    action 'LE' (noprec):   reduce cond --> 'T_TRUE'
    action 'GT' (noprec):   reduce cond --> 'T_TRUE'
    action 'GE' (noprec):   reduce cond --> 'T_TRUE'
    action 'PLUS' (noprec):   reduce cond --> 'T_TRUE'
    action 'MINUS' (noprec):   reduce cond --> 'T_TRUE'
    action 'ASTER' (noprec):   reduce cond --> 'T_TRUE'
    action 'SLASH' (noprec):   reduce cond --> 'T_TRUE'
    action 'MOD' (noprec):   reduce cond --> 'T_TRUE'
    action 'NOT' (noprec):   reduce cond --> 'T_TRUE'
    action 'AND' (noprec):   reduce cond --> 'T_TRUE'
    action 'OR' (noprec):   reduce cond --> 'T_TRUE'
    action 'LPAREN' (noprec):   reduce cond --> 'T_TRUE'
    action 'RPAREN' (noprec):   reduce cond --> 'T_TRUE'
    action 'LSBR' (noprec):   reduce cond --> 'T_TRUE'
    action 'RSBR' (noprec):   reduce cond --> 'T_TRUE'
    action 'LCBR' (noprec):   reduce cond --> 'T_TRUE'
    action 'RCBR' (noprec):   reduce cond --> 'T_TRUE'
    action 'COMMA' (noprec):   reduce cond --> 'T_TRUE'
    action 'COLON' (noprec):   reduce cond --> 'T_TRUE'
    action 'SEMICOLON' (noprec):   reduce cond --> 'T_TRUE'
    action 'ASSIGN' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_BYTE' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_ELSE' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_FALSE' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_IF' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_INT' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_PROC' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_REF' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_RETURN' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_WHILE' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_TRUE' (noprec):   reduce cond --> 'T_TRUE'
    action 'T_EOF' (noprec):   reduce cond --> 'T_TRUE'
    action 'ID' (noprec):   reduce cond --> 'T_TRUE'
    action 'STRING' (noprec):   reduce cond --> 'T_TRUE'
    action 'INT' (noprec):   reduce cond --> 'T_TRUE'
    action 'BYTE' (noprec):   reduce cond --> 'T_TRUE'
    action 'error' (noprec):   reduce cond --> 'T_TRUE'
    action '#' (noprec):   reduce cond --> 'T_TRUE'
    action '$$' (noprec):   reduce cond --> 'T_TRUE'

  immediate action:   reduce cond --> 'T_TRUE'
 gotos:

state 159:
  items:
    cond -> 'T_FALSE' . 

  actions:
    action 'EQ' (noprec):   reduce cond --> 'T_FALSE'
    action 'NE' (noprec):   reduce cond --> 'T_FALSE'
    action 'LT' (noprec):   reduce cond --> 'T_FALSE'
    action 'LE' (noprec):   reduce cond --> 'T_FALSE'
    action 'GT' (noprec):   reduce cond --> 'T_FALSE'
    action 'GE' (noprec):   reduce cond --> 'T_FALSE'
    action 'PLUS' (noprec):   reduce cond --> 'T_FALSE'
    action 'MINUS' (noprec):   reduce cond --> 'T_FALSE'
    action 'ASTER' (noprec):   reduce cond --> 'T_FALSE'
    action 'SLASH' (noprec):   reduce cond --> 'T_FALSE'
    action 'MOD' (noprec):   reduce cond --> 'T_FALSE'
    action 'NOT' (noprec):   reduce cond --> 'T_FALSE'
    action 'AND' (noprec):   reduce cond --> 'T_FALSE'
    action 'OR' (noprec):   reduce cond --> 'T_FALSE'
    action 'LPAREN' (noprec):   reduce cond --> 'T_FALSE'
    action 'RPAREN' (noprec):   reduce cond --> 'T_FALSE'
    action 'LSBR' (noprec):   reduce cond --> 'T_FALSE'
    action 'RSBR' (noprec):   reduce cond --> 'T_FALSE'
    action 'LCBR' (noprec):   reduce cond --> 'T_FALSE'
    action 'RCBR' (noprec):   reduce cond --> 'T_FALSE'
    action 'COMMA' (noprec):   reduce cond --> 'T_FALSE'
    action 'COLON' (noprec):   reduce cond --> 'T_FALSE'
    action 'SEMICOLON' (noprec):   reduce cond --> 'T_FALSE'
    action 'ASSIGN' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_BYTE' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_ELSE' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_FALSE' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_IF' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_INT' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_PROC' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_REF' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_RETURN' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_WHILE' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_TRUE' (noprec):   reduce cond --> 'T_FALSE'
    action 'T_EOF' (noprec):   reduce cond --> 'T_FALSE'
    action 'ID' (noprec):   reduce cond --> 'T_FALSE'
    action 'STRING' (noprec):   reduce cond --> 'T_FALSE'
    action 'INT' (noprec):   reduce cond --> 'T_FALSE'
    action 'BYTE' (noprec):   reduce cond --> 'T_FALSE'
    action 'error' (noprec):   reduce cond --> 'T_FALSE'
    action '#' (noprec):   reduce cond --> 'T_FALSE'
    action '$$' (noprec):   reduce cond --> 'T_FALSE'

  immediate action:   reduce cond --> 'T_FALSE'
 gotos:

state 160:
  items:
    cond -> 'LPAREN' cond . 'RPAREN'
    cond -> cond . 'AND' cond
    cond -> cond . 'OR' cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9996):   shift 167
    action 'OR' (explicit left 9995):   shift 168
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 161
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   error
    action 'BYTE' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 161:
  items:
    cond -> 'LPAREN' cond 'RPAREN' . 

  actions:
    action 'EQ' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'NE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'LT' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'LE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'GT' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'GE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'PLUS' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'MINUS' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'ASTER' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'SLASH' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'MOD' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'NOT' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'AND' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'OR' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'LPAREN' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'RPAREN' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'LSBR' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'RSBR' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'LCBR' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'RCBR' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'COMMA' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'COLON' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'SEMICOLON' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'ASSIGN' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_BYTE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_ELSE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_FALSE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_IF' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_INT' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_PROC' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_REF' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_RETURN' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_WHILE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_TRUE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'T_EOF' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'ID' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'STRING' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'INT' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'BYTE' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action 'error' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action '#' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'
    action '$$' (noprec):   reduce cond --> 'LPAREN' cond 'RPAREN'

  immediate action:   reduce cond --> 'LPAREN' cond 'RPAREN'
 gotos:

state 162:
  items:
    cond -> 'NOT' . cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 134
    goto l_value: 112
    goto cond: 163

state 163:
  items:
    cond -> 'NOT' cond . 
    cond -> cond . 'AND' cond
    cond -> cond . 'OR' cond

  actions:
    action 'EQ' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'NE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'LT' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'LE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'GT' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'GE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'PLUS' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'MINUS' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'ASTER' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'SLASH' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'MOD' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'NOT' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'AND' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'OR' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'LPAREN' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'RPAREN' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'LSBR' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'RSBR' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'LCBR' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'RCBR' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'COMMA' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'COLON' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'SEMICOLON' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'ASSIGN' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_BYTE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_ELSE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_FALSE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_IF' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_INT' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_PROC' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_REF' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_RETURN' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_WHILE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_TRUE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'T_EOF' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'ID' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'STRING' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'INT' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'BYTE' (explicit left 10000):   reduce cond --> 'NOT' cond
    action 'error' (explicit left 10000):   reduce cond --> 'NOT' cond
    action '#' (explicit left 10000):   reduce cond --> 'NOT' cond
    action '$$' (explicit left 10000):   reduce cond --> 'NOT' cond

  immediate action: <none>
 gotos:

state 164:
  items:
    cond -> expr compop . expr
    cond -> expr compop . 'error'

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 148
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 135
    goto l_value: 112

state 165:
  items:
    cond -> cond . 'AND' cond
    cond -> cond 'AND' cond . 
    cond -> cond . 'OR' cond

  actions:
    action 'EQ' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'NE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'LT' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'LE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'GT' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'GE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'PLUS' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'MINUS' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'ASTER' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'SLASH' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'MOD' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'NOT' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'AND' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'OR' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'LPAREN' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'RPAREN' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'LSBR' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'RSBR' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'LCBR' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'RCBR' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'COMMA' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'COLON' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'SEMICOLON' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'ASSIGN' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_BYTE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_ELSE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_FALSE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_IF' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_INT' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_PROC' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_REF' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_RETURN' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_WHILE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_TRUE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'T_EOF' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'ID' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'STRING' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'INT' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'BYTE' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action 'error' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action '#' (explicit left 9996):   reduce cond --> cond 'AND' cond
    action '$$' (explicit left 9996):   reduce cond --> cond 'AND' cond

  immediate action: <none>
 gotos:

state 166:
  items:
    cond -> cond . 'AND' cond
    cond -> cond . 'OR' cond
    cond -> cond 'OR' cond . 

  actions:
    action 'EQ' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'NE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'LT' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'LE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'GT' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'GE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'PLUS' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'MINUS' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'ASTER' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'SLASH' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'MOD' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'NOT' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'AND' (explicit left 9996):   shift 167
    action 'OR' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'LPAREN' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'RPAREN' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'LSBR' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'RSBR' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'LCBR' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'RCBR' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'COMMA' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'COLON' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'SEMICOLON' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'ASSIGN' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_BYTE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_ELSE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_FALSE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_IF' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_INT' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_PROC' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_REF' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_RETURN' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_WHILE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_TRUE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'T_EOF' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'ID' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'STRING' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'INT' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'BYTE' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action 'error' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action '#' (explicit left 9995):   reduce cond --> cond 'OR' cond
    action '$$' (explicit left 9995):   reduce cond --> cond 'OR' cond

  immediate action: <none>
 gotos:

state 167:
  items:
    cond -> cond 'AND' . cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 134
    goto l_value: 112
    goto cond: 165

state 168:
  items:
    cond -> cond 'OR' . cond

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (explicit left 10000):   shift 162
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 114
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   shift 159
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   shift 158
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 149
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 134
    goto l_value: 112
    goto cond: 166

state 169:
  items:
    cond -> 'error' compop . expr

  actions:
    action 'EQ' (noprec):   error
    action 'NE' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'PLUS' (explicit left 9998):   shift 119
    action 'MINUS' (explicit left 9998):   shift 121
    action 'ASTER' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'MOD' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'LPAREN' (noprec):   shift 113
    action 'RPAREN' (noprec):   error
    action 'LSBR' (noprec):   error
    action 'RSBR' (noprec):   error
    action 'LCBR' (noprec):   error
    action 'RCBR' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'T_BYTE' (noprec):   error
    action 'T_ELSE' (noprec):   error
    action 'T_FALSE' (noprec):   error
    action 'T_IF' (noprec):   error
    action 'T_INT' (noprec):   error
    action 'T_PROC' (noprec):   error
    action 'T_REF' (noprec):   error
    action 'T_RETURN' (noprec):   error
    action 'T_WHILE' (noprec):   error
    action 'T_TRUE' (noprec):   error
    action 'T_EOF' (noprec):   error
    action 'ID' (noprec):   shift 100
    action 'STRING' (noprec):   error
    action 'INT' (noprec):   shift 110
    action 'BYTE' (noprec):   shift 111
    action 'error' (noprec):   shift 142
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto func_call: 118
    goto expr: 136
    goto l_value: 112

state 170:
  items:
    compop -> 'EQ' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'EQ'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'EQ'

  immediate action:   reduce compop --> 'EQ'
 gotos:

state 171:
  items:
    compop -> 'NE' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'NE'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'NE'

  immediate action:   reduce compop --> 'NE'
 gotos:

state 172:
  items:
    compop -> 'LT' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'LT'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'LT'

  immediate action:   reduce compop --> 'LT'
 gotos:

state 173:
  items:
    compop -> 'GT' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'GT'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'GT'

  immediate action:   reduce compop --> 'GT'
 gotos:

state 174:
  items:
    compop -> 'LE' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'LE'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'LE'

  immediate action:   reduce compop --> 'LE'
 gotos:

state 175:
  items:
    compop -> 'GE' . 

  actions:
    action 'EQ' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'NE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'LT' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'LE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'GT' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'GE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'PLUS' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'MINUS' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'ASTER' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'SLASH' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'MOD' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'NOT' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'AND' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'OR' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'LPAREN' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'RPAREN' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'LSBR' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'RSBR' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'LCBR' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'RCBR' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'COMMA' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'COLON' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'SEMICOLON' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'ASSIGN' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_BYTE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_ELSE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_FALSE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_IF' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_INT' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_PROC' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_REF' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_RETURN' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_WHILE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_TRUE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'T_EOF' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'ID' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'STRING' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'INT' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'BYTE' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action 'error' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action '#' (explicit nonassoc 9997):   reduce compop --> 'GE'
    action '$$' (explicit nonassoc 9997):   reduce compop --> 'GE'

  immediate action:   reduce compop --> 'GE'
 gotos:


startStates = 0
------------------------
