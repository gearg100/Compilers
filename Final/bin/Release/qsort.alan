main () : proc
   qsort (n : int, choice : int, a : reference int []) : proc
      qsort_auxil (lower : int, upper : int) : proc
         swap (a : reference int, b : reference int) : proc
            t : int;
         {
            t = a;
            a = b;
            b = t;
         }

         x : int;
         i : int;
         j : int;
      { -- qsort_auxil
         if (lower < upper) {
            x = a[(lower + upper) / 2];
            i = lower;
            j = upper;
            if (choice == 1) {
               while (i <= j) {
                  while (a[i] < x) i = i+1;
                  while (a[j] > x) j = j-1;
                  if (i <= j) {
                     swap(a[i], a[j]);
                     i = i+1;
                     j = j-1;
                  }
               }
            }
            else {
               while (i <= j) {
                  while (a[i] > x) i = i+1;
                  while (a[j] < x) j = j-1;
                  if (i <= j) {
                     swap(a[i], a[j]);
                     i = i+1;
                     j = j-1;
                  }
               }
            }
            qsort_auxil(lower, j);
            qsort_auxil(i, upper);
         }
      } -- qsort_auxil


   { -- qsort
      qsort_auxil(0, n-1);
   } -- qsort

   writeArray (msg : reference byte [], n : int, x : reference int []) : proc
      i : int;
   {
      writeString(msg);
      i = 0;
      while (i < n) {
         if (i > 0) writeString(", ");
         writeInteger(x[i]);
         i = i+1;
      }
      writeString("\n");
   }

   seed   : int;
   x      : int [16];
   i      : int;
   choice : int;

{ -- main
   writeString("Seed :\t");
   seed = readInteger();
   writeString("How do you' want to sort?\n");
   writeString("How do you want to sort?\x0a");
   writeString("  1. Min to Max\n");
   writeString("  2. Max to Min\n");
   writeString("Choice : ");
   choice = readInteger();
   while (choice < 1 | choice > 2) {
      writeString("How do you want to sort?\x0a");
      writeString("  1. Min to Max\n");
      writeString("  2. Max to Min\n");
      writeString("Choice : ");
      choice = readInteger();
   }
   i = 0;
   while (i < 16) {
      seed = (seed * 137 + 220 + i) % 101;
      x[i] = seed;
      i = i+1;
   }
   writeArray("Initial array; ", 16, x);
   qsort(16, choice, x);
   writeArray("Sorted array: ", 16, x);
} -- main
