// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"




# 11 "obj\x86\Release\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EQ
  | NE
  | LT
  | LE
  | GT
  | GE
  | PLUS
  | MINUS
  | ASTER
  | SLASH
  | MOD
  | NOT
  | AND
  | OR
  | LPAREN
  | RPAREN
  | LSBR
  | RSBR
  | LCBR
  | RCBR
  | COMMA
  | COLON
  | SEMICOLON
  | ASSIGN
  | T_BYTE
  | T_ELSE
  | T_FALSE
  | T_IF
  | T_INT
  | T_PROC
  | T_REF
  | T_RETURN
  | T_WHILE
  | T_TRUE
  | T_EOF
  | ID of (string)
  | STRING of (string * string)
  | INT of (int)
  | BYTE of (char)
  | ERROR of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_LT
    | TOKEN_LE
    | TOKEN_GT
    | TOKEN_GE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_ASTER
    | TOKEN_SLASH
    | TOKEN_MOD
    | TOKEN_NOT
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LSBR
    | TOKEN_RSBR
    | TOKEN_LCBR
    | TOKEN_RCBR
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_SEMICOLON
    | TOKEN_ASSIGN
    | TOKEN_T_BYTE
    | TOKEN_T_ELSE
    | TOKEN_T_FALSE
    | TOKEN_T_IF
    | TOKEN_T_INT
    | TOKEN_T_PROC
    | TOKEN_T_REF
    | TOKEN_T_RETURN
    | TOKEN_T_WHILE
    | TOKEN_T_TRUE
    | TOKEN_T_EOF
    | TOKEN_ID
    | TOKEN_STRING
    | TOKEN_INT
    | TOKEN_BYTE
    | TOKEN_ERROR
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_func_def
    | NONTERM_fpar_list
    | NONTERM_fpar_def
    | NONTERM_data_type
    | NONTERM_type
    | NONTERM_r_type
    | NONTERM_local_def
    | NONTERM_local_def_list
    | NONTERM_var_def
    | NONTERM_stmt
    | NONTERM_simple_stmt
    | NONTERM_stmt_list
    | NONTERM_compound_stmt
    | NONTERM_func_call
    | NONTERM_expr_list
    | NONTERM_expr
    | NONTERM_l_value
    | NONTERM_cond

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EQ  -> 0 
  | NE  -> 1 
  | LT  -> 2 
  | LE  -> 3 
  | GT  -> 4 
  | GE  -> 5 
  | PLUS  -> 6 
  | MINUS  -> 7 
  | ASTER  -> 8 
  | SLASH  -> 9 
  | MOD  -> 10 
  | NOT  -> 11 
  | AND  -> 12 
  | OR  -> 13 
  | LPAREN  -> 14 
  | RPAREN  -> 15 
  | LSBR  -> 16 
  | RSBR  -> 17 
  | LCBR  -> 18 
  | RCBR  -> 19 
  | COMMA  -> 20 
  | COLON  -> 21 
  | SEMICOLON  -> 22 
  | ASSIGN  -> 23 
  | T_BYTE  -> 24 
  | T_ELSE  -> 25 
  | T_FALSE  -> 26 
  | T_IF  -> 27 
  | T_INT  -> 28 
  | T_PROC  -> 29 
  | T_REF  -> 30 
  | T_RETURN  -> 31 
  | T_WHILE  -> 32 
  | T_TRUE  -> 33 
  | T_EOF  -> 34 
  | ID _ -> 35 
  | STRING _ -> 36 
  | INT _ -> 37 
  | BYTE _ -> 38 
  | ERROR _ -> 39 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EQ 
  | 1 -> TOKEN_NE 
  | 2 -> TOKEN_LT 
  | 3 -> TOKEN_LE 
  | 4 -> TOKEN_GT 
  | 5 -> TOKEN_GE 
  | 6 -> TOKEN_PLUS 
  | 7 -> TOKEN_MINUS 
  | 8 -> TOKEN_ASTER 
  | 9 -> TOKEN_SLASH 
  | 10 -> TOKEN_MOD 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_AND 
  | 13 -> TOKEN_OR 
  | 14 -> TOKEN_LPAREN 
  | 15 -> TOKEN_RPAREN 
  | 16 -> TOKEN_LSBR 
  | 17 -> TOKEN_RSBR 
  | 18 -> TOKEN_LCBR 
  | 19 -> TOKEN_RCBR 
  | 20 -> TOKEN_COMMA 
  | 21 -> TOKEN_COLON 
  | 22 -> TOKEN_SEMICOLON 
  | 23 -> TOKEN_ASSIGN 
  | 24 -> TOKEN_T_BYTE 
  | 25 -> TOKEN_T_ELSE 
  | 26 -> TOKEN_T_FALSE 
  | 27 -> TOKEN_T_IF 
  | 28 -> TOKEN_T_INT 
  | 29 -> TOKEN_T_PROC 
  | 30 -> TOKEN_T_REF 
  | 31 -> TOKEN_T_RETURN 
  | 32 -> TOKEN_T_WHILE 
  | 33 -> TOKEN_T_TRUE 
  | 34 -> TOKEN_T_EOF 
  | 35 -> TOKEN_ID 
  | 36 -> TOKEN_STRING 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_BYTE 
  | 39 -> TOKEN_ERROR 
  | 42 -> TOKEN_end_of_input
  | 40 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_func_def 
    | 3 -> NONTERM_func_def 
    | 4 -> NONTERM_func_def 
    | 5 -> NONTERM_func_def 
    | 6 -> NONTERM_fpar_list 
    | 7 -> NONTERM_fpar_list 
    | 8 -> NONTERM_fpar_def 
    | 9 -> NONTERM_fpar_def 
    | 10 -> NONTERM_data_type 
    | 11 -> NONTERM_data_type 
    | 12 -> NONTERM_type 
    | 13 -> NONTERM_type 
    | 14 -> NONTERM_r_type 
    | 15 -> NONTERM_r_type 
    | 16 -> NONTERM_local_def 
    | 17 -> NONTERM_local_def 
    | 18 -> NONTERM_local_def_list 
    | 19 -> NONTERM_local_def_list 
    | 20 -> NONTERM_var_def 
    | 21 -> NONTERM_var_def 
    | 22 -> NONTERM_stmt 
    | 23 -> NONTERM_simple_stmt 
    | 24 -> NONTERM_simple_stmt 
    | 25 -> NONTERM_simple_stmt 
    | 26 -> NONTERM_simple_stmt 
    | 27 -> NONTERM_simple_stmt 
    | 28 -> NONTERM_simple_stmt 
    | 29 -> NONTERM_simple_stmt 
    | 30 -> NONTERM_simple_stmt 
    | 31 -> NONTERM_simple_stmt 
    | 32 -> NONTERM_stmt_list 
    | 33 -> NONTERM_stmt_list 
    | 34 -> NONTERM_compound_stmt 
    | 35 -> NONTERM_compound_stmt 
    | 36 -> NONTERM_func_call 
    | 37 -> NONTERM_func_call 
    | 38 -> NONTERM_expr_list 
    | 39 -> NONTERM_expr_list 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_expr 
    | 46 -> NONTERM_expr 
    | 47 -> NONTERM_expr 
    | 48 -> NONTERM_expr 
    | 49 -> NONTERM_expr 
    | 50 -> NONTERM_expr 
    | 51 -> NONTERM_expr 
    | 52 -> NONTERM_l_value 
    | 53 -> NONTERM_l_value 
    | 54 -> NONTERM_l_value 
    | 55 -> NONTERM_cond 
    | 56 -> NONTERM_cond 
    | 57 -> NONTERM_cond 
    | 58 -> NONTERM_cond 
    | 59 -> NONTERM_cond 
    | 60 -> NONTERM_cond 
    | 61 -> NONTERM_cond 
    | 62 -> NONTERM_cond 
    | 63 -> NONTERM_cond 
    | 64 -> NONTERM_cond 
    | 65 -> NONTERM_cond 
    | 66 -> NONTERM_cond 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 42 
let _fsyacc_tagOfErrorTerminal = 40

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | LT  -> "LT" 
  | LE  -> "LE" 
  | GT  -> "GT" 
  | GE  -> "GE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | ASTER  -> "ASTER" 
  | SLASH  -> "SLASH" 
  | MOD  -> "MOD" 
  | NOT  -> "NOT" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LSBR  -> "LSBR" 
  | RSBR  -> "RSBR" 
  | LCBR  -> "LCBR" 
  | RCBR  -> "RCBR" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | SEMICOLON  -> "SEMICOLON" 
  | ASSIGN  -> "ASSIGN" 
  | T_BYTE  -> "T_BYTE" 
  | T_ELSE  -> "T_ELSE" 
  | T_FALSE  -> "T_FALSE" 
  | T_IF  -> "T_IF" 
  | T_INT  -> "T_INT" 
  | T_PROC  -> "T_PROC" 
  | T_REF  -> "T_REF" 
  | T_RETURN  -> "T_RETURN" 
  | T_WHILE  -> "T_WHILE" 
  | T_TRUE  -> "T_TRUE" 
  | T_EOF  -> "T_EOF" 
  | ID _ -> "ID" 
  | STRING _ -> "STRING" 
  | INT _ -> "INT" 
  | BYTE _ -> "BYTE" 
  | ERROR _ -> "ERROR" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | ASTER  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LSBR  -> (null : System.Object) 
  | RSBR  -> (null : System.Object) 
  | LCBR  -> (null : System.Object) 
  | RCBR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | T_BYTE  -> (null : System.Object) 
  | T_ELSE  -> (null : System.Object) 
  | T_FALSE  -> (null : System.Object) 
  | T_IF  -> (null : System.Object) 
  | T_INT  -> (null : System.Object) 
  | T_PROC  -> (null : System.Object) 
  | T_REF  -> (null : System.Object) 
  | T_RETURN  -> (null : System.Object) 
  | T_WHILE  -> (null : System.Object) 
  | T_TRUE  -> (null : System.Object) 
  | T_EOF  -> (null : System.Object) 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ERROR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 4us; 65535us; 0us; 2us; 8us; 34us; 15us; 34us; 36us; 34us; 1us; 65535us; 5us; 12us; 2us; 65535us; 5us; 19us; 20us; 21us; 5us; 65535us; 7us; 32us; 14us; 32us; 23us; 29us; 25us; 29us; 38us; 39us; 2us; 65535us; 23us; 24us; 25us; 26us; 2us; 65535us; 7us; 8us; 14us; 15us; 3us; 65535us; 8us; 36us; 15us; 36us; 36us; 36us; 3us; 65535us; 8us; 10us; 15us; 17us; 36us; 37us; 3us; 65535us; 8us; 35us; 15us; 35us; 36us; 35us; 3us; 65535us; 64us; 65us; 71us; 72us; 73us; 70us; 5us; 65535us; 57us; 58us; 59us; 60us; 64us; 45us; 71us; 45us; 73us; 45us; 1us; 65535us; 73us; 71us; 9us; 65535us; 8us; 9us; 10us; 11us; 15us; 16us; 17us; 18us; 57us; 51us; 59us; 51us; 64us; 51us; 71us; 51us; 73us; 51us; 30us; 65535us; 48us; 92us; 55us; 92us; 57us; 52us; 59us; 52us; 62us; 92us; 64us; 52us; 66us; 92us; 71us; 52us; 73us; 52us; 77us; 92us; 82us; 92us; 87us; 92us; 88us; 92us; 93us; 92us; 95us; 92us; 110us; 92us; 111us; 92us; 112us; 92us; 113us; 92us; 114us; 92us; 115us; 92us; 122us; 92us; 124us; 92us; 125us; 92us; 126us; 92us; 127us; 92us; 128us; 92us; 129us; 92us; 132us; 92us; 133us; 92us; 1us; 65535us; 77us; 79us; 25us; 65535us; 48us; 49us; 55us; 103us; 62us; 103us; 66us; 68us; 77us; 81us; 82us; 83us; 87us; 89us; 88us; 90us; 93us; 94us; 95us; 96us; 110us; 97us; 111us; 98us; 112us; 99us; 113us; 100us; 114us; 101us; 115us; 102us; 122us; 103us; 124us; 104us; 125us; 105us; 126us; 106us; 127us; 107us; 128us; 108us; 129us; 109us; 132us; 103us; 133us; 103us; 30us; 65535us; 48us; 86us; 55us; 86us; 57us; 47us; 59us; 47us; 62us; 86us; 64us; 47us; 66us; 86us; 71us; 47us; 73us; 47us; 77us; 86us; 82us; 86us; 87us; 86us; 88us; 86us; 93us; 86us; 95us; 86us; 110us; 86us; 111us; 86us; 112us; 86us; 113us; 86us; 114us; 86us; 115us; 86us; 122us; 86us; 124us; 86us; 125us; 86us; 126us; 86us; 127us; 86us; 128us; 86us; 129us; 86us; 132us; 86us; 133us; 86us; 6us; 65535us; 55us; 56us; 62us; 63us; 88us; 120us; 122us; 123us; 132us; 130us; 133us; 131us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 8us; 10us; 13us; 19us; 22us; 25us; 29us; 33us; 37us; 41us; 47us; 49us; 59us; 90us; 92us; 118us; 149us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 4us; 2us; 3us; 4us; 5us; 6us; 2us; 3us; 4us; 5us; 20us; 21us; 4us; 2us; 3us; 4us; 5us; 2us; 2us; 3us; 2us; 2us; 3us; 2us; 2us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 3us; 4us; 5us; 7us; 2us; 4us; 5us; 2us; 4us; 5us; 2us; 4us; 5us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 2us; 8us; 9us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 2us; 12us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 2us; 20us; 21us; 2us; 20us; 21us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 24us; 6us; 24us; 47us; 48us; 49us; 50us; 51us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 2us; 27us; 28us; 2us; 27us; 28us; 4us; 27us; 28us; 65us; 66us; 2us; 27us; 28us; 2us; 27us; 28us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 29us; 3us; 29us; 65us; 66us; 1us; 29us; 1us; 29us; 2us; 30us; 31us; 1us; 30us; 6us; 31us; 47us; 48us; 49us; 50us; 51us; 1us; 31us; 1us; 32us; 2us; 33us; 35us; 1us; 33us; 2us; 34us; 35us; 1us; 34us; 1us; 35us; 4us; 36us; 37us; 52us; 53us; 2us; 36us; 37us; 1us; 36us; 2us; 37us; 39us; 1us; 37us; 6us; 38us; 47us; 48us; 49us; 50us; 51us; 1us; 39us; 6us; 39us; 47us; 48us; 49us; 50us; 51us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 2us; 43us; 57us; 6us; 43us; 47us; 48us; 49us; 50us; 51us; 12us; 43us; 47us; 48us; 49us; 50us; 51us; 59us; 60us; 61us; 62us; 63us; 64us; 1us; 43us; 1us; 44us; 1us; 45us; 6us; 45us; 47us; 48us; 49us; 50us; 51us; 1us; 46us; 6us; 46us; 47us; 48us; 49us; 50us; 51us; 6us; 47us; 47us; 48us; 49us; 50us; 51us; 6us; 47us; 48us; 48us; 49us; 50us; 51us; 6us; 47us; 48us; 49us; 49us; 50us; 51us; 6us; 47us; 48us; 49us; 50us; 50us; 51us; 6us; 47us; 48us; 49us; 50us; 51us; 51us; 6us; 47us; 48us; 49us; 50us; 51us; 53us; 11us; 47us; 48us; 49us; 50us; 51us; 59us; 60us; 61us; 62us; 63us; 64us; 6us; 47us; 48us; 49us; 50us; 51us; 59us; 6us; 47us; 48us; 49us; 50us; 51us; 60us; 6us; 47us; 48us; 49us; 50us; 51us; 61us; 6us; 47us; 48us; 49us; 50us; 51us; 62us; 6us; 47us; 48us; 49us; 50us; 51us; 63us; 6us; 47us; 48us; 49us; 50us; 51us; 64us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 3us; 57us; 65us; 66us; 1us; 57us; 1us; 58us; 3us; 58us; 65us; 66us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 3us; 65us; 65us; 66us; 3us; 65us; 66us; 66us; 1us; 65us; 1us; 66us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 11us; 18us; 23us; 26us; 29us; 32us; 34us; 36us; 38us; 42us; 45us; 48us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 66us; 69us; 71us; 73us; 75us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 97us; 99us; 102us; 105us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 130us; 132us; 134us; 136us; 138us; 141us; 144us; 149us; 152us; 155us; 157us; 159us; 161us; 163us; 167us; 169us; 171us; 174us; 176us; 183us; 185us; 187us; 190us; 192us; 195us; 197us; 199us; 204us; 207us; 209us; 212us; 214us; 221us; 223us; 230us; 232us; 234us; 236us; 238us; 241us; 248us; 261us; 263us; 265us; 267us; 274us; 276us; 283us; 290us; 297us; 304us; 311us; 318us; 325us; 337us; 344us; 351us; 358us; 365us; 372us; 379us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 403us; 405us; 407us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 427us; 431us; 433us; |]
let _fsyacc_action_rows = 134
let _fsyacc_actionTableElements = [|1us; 32768us; 35us; 3us; 0us; 49152us; 0us; 16385us; 1us; 32768us; 14us; 5us; 2us; 32768us; 14us; 5us; 21us; 38us; 2us; 32768us; 15us; 6us; 35us; 22us; 1us; 32768us; 21us; 7us; 3us; 32768us; 24us; 28us; 28us; 27us; 29us; 33us; 2us; 32768us; 18us; 73us; 35us; 4us; 0us; 16386us; 1us; 32768us; 18us; 73us; 0us; 16387us; 2us; 32768us; 15us; 13us; 20us; 20us; 1us; 32768us; 21us; 14us; 3us; 32768us; 24us; 28us; 28us; 27us; 29us; 33us; 2us; 32768us; 18us; 73us; 35us; 4us; 0us; 16388us; 1us; 32768us; 18us; 73us; 0us; 16389us; 0us; 16390us; 1us; 32768us; 35us; 22us; 0us; 16391us; 1us; 32768us; 21us; 23us; 3us; 32768us; 24us; 28us; 28us; 27us; 30us; 25us; 0us; 16392us; 2us; 32768us; 24us; 28us; 28us; 27us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 16396us; 16us; 30us; 1us; 32768us; 17us; 31us; 0us; 16397us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16401us; 1us; 16402us; 35us; 4us; 0us; 16403us; 2us; 32768us; 24us; 28us; 28us; 27us; 2us; 32768us; 16us; 41us; 22us; 40us; 0us; 16404us; 1us; 32768us; 28us; 42us; 1us; 32768us; 17us; 43us; 1us; 32768us; 22us; 44us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 1us; 32768us; 23us; 48us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 6us; 32768us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 22us; 50us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 22us; 53us; 0us; 16410us; 1us; 32768us; 14us; 55us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 3us; 32768us; 12us; 132us; 13us; 133us; 15us; 57us; 7us; 32768us; 18us; 73us; 22us; 46us; 27us; 54us; 31us; 66us; 32us; 61us; 35us; 76us; 36us; 117us; 1us; 16411us; 25us; 59us; 7us; 32768us; 18us; 73us; 22us; 46us; 27us; 54us; 31us; 66us; 32us; 61us; 35us; 76us; 36us; 117us; 0us; 16412us; 1us; 32768us; 14us; 62us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 3us; 32768us; 12us; 132us; 13us; 133us; 15us; 64us; 7us; 32768us; 18us; 73us; 22us; 46us; 27us; 54us; 31us; 66us; 32us; 61us; 35us; 76us; 36us; 117us; 0us; 16413us; 8us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 22us; 67us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16414us; 6us; 32768us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 22us; 69us; 0us; 16415us; 0us; 16416us; 8us; 32768us; 18us; 73us; 19us; 75us; 22us; 46us; 27us; 54us; 31us; 66us; 32us; 61us; 35us; 76us; 36us; 117us; 0us; 16417us; 8us; 32768us; 18us; 73us; 19us; 74us; 22us; 46us; 27us; 54us; 31us; 66us; 32us; 61us; 35us; 76us; 36us; 117us; 0us; 16418us; 0us; 16419us; 2us; 16436us; 14us; 77us; 16us; 115us; 8us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 15us; 78us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16420us; 2us; 32768us; 15us; 80us; 20us; 82us; 0us; 16421us; 5us; 16422us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 5us; 16423us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 6us; 32768us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 15us; 91us; 12us; 32768us; 0us; 124us; 1us; 125us; 2us; 126us; 3us; 128us; 4us; 127us; 5us; 129us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 15us; 91us; 0us; 16427us; 0us; 16428us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16429us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16430us; 3us; 16431us; 8us; 112us; 9us; 113us; 10us; 114us; 3us; 16432us; 8us; 112us; 9us; 113us; 10us; 114us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 6us; 32768us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 17us; 116us; 11us; 32768us; 0us; 124us; 1us; 125us; 2us; 126us; 3us; 128us; 4us; 127us; 5us; 129us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16443us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16444us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16445us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16446us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16447us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 5us; 16448us; 6us; 110us; 7us; 111us; 8us; 112us; 9us; 113us; 10us; 114us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 3us; 32768us; 12us; 132us; 13us; 133us; 15us; 121us; 0us; 16441us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16442us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 7us; 32768us; 6us; 93us; 7us; 95us; 14us; 87us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 0us; 16449us; 1us; 16450us; 12us; 132us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; 10us; 32768us; 6us; 93us; 7us; 95us; 11us; 122us; 14us; 88us; 26us; 119us; 33us; 118us; 35us; 76us; 36us; 117us; 37us; 84us; 38us; 85us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 4us; 6us; 9us; 12us; 14us; 18us; 21us; 22us; 24us; 25us; 28us; 30us; 34us; 37us; 38us; 40us; 41us; 42us; 44us; 45us; 47us; 51us; 52us; 55us; 56us; 57us; 58us; 60us; 62us; 63us; 64us; 65us; 66us; 67us; 69us; 70us; 73us; 76us; 77us; 79us; 81us; 83us; 84us; 85us; 86us; 88us; 96us; 103us; 104us; 105us; 107us; 108us; 110us; 121us; 125us; 133us; 135us; 143us; 144us; 146us; 157us; 161us; 169us; 170us; 179us; 180us; 187us; 188us; 189us; 198us; 199us; 208us; 209us; 210us; 213us; 222us; 223us; 226us; 227us; 233us; 241us; 247us; 248us; 249us; 250us; 258us; 269us; 276us; 289us; 290us; 291us; 299us; 300us; 308us; 309us; 313us; 317us; 318us; 319us; 320us; 327us; 339us; 345us; 351us; 357us; 363us; 369us; 375us; 383us; 391us; 399us; 407us; 415us; 423us; 424us; 425us; 426us; 427us; 431us; 432us; 443us; 444us; 452us; 460us; 468us; 476us; 484us; 492us; 493us; 495us; 506us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 6us; 7us; 7us; 8us; 1us; 3us; 3us; 4us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 4us; 7us; 1us; 1us; 4us; 1us; 2us; 5us; 7us; 5us; 2us; 3us; 1us; 2us; 2us; 3us; 3us; 4us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 4us; 1us; 1us; 1us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16386us; 65535us; 16387us; 65535us; 65535us; 65535us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 16391us; 65535us; 65535us; 16392us; 65535us; 16393us; 16394us; 16395us; 65535us; 65535us; 16397us; 16398us; 16399us; 16400us; 16401us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 16405us; 16406us; 16407us; 65535us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 16416us; 65535us; 16417us; 65535us; 16418us; 16419us; 65535us; 65535us; 16420us; 65535us; 16421us; 65535us; 65535us; 65535us; 16424us; 16425us; 16426us; 65535us; 65535us; 65535us; 65535us; 16427us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 385 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 394 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                       () 
                   )
# 52 "Parser.fsy"
                 :  unit ));
# 405 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                                                             () 
                   )
# 54 "Parser.fsy"
                 :  unit ));
# 418 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'local_def_list)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                                                            () 
                   )
# 55 "Parser.fsy"
                 :  unit ));
# 432 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                                                       () 
                   )
# 56 "Parser.fsy"
                 :  unit ));
# 446 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'local_def_list)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                                                                                      () 
                   )
# 57 "Parser.fsy"
                 :  unit ));
# 461 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                           () 
                   )
# 59 "Parser.fsy"
                 :  unit ));
# 472 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                           () 
                   )
# 60 "Parser.fsy"
                 :  unit ));
# 484 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                               () 
                   )
# 62 "Parser.fsy"
                 :  unit ));
# 496 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                                     () 
                   )
# 63 "Parser.fsy"
                 :  unit ));
# 508 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                        () 
                   )
# 65 "Parser.fsy"
                 :  unit ));
# 518 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                         () 
                   )
# 66 "Parser.fsy"
                 :  unit ));
# 528 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                       () 
                   )
# 68 "Parser.fsy"
                 :  unit ));
# 539 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                 () 
                   )
# 69 "Parser.fsy"
                 :  unit ));
# 550 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                         () 
                   )
# 71 "Parser.fsy"
                 :  unit ));
# 561 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                      () 
                   )
# 72 "Parser.fsy"
                 :  unit ));
# 571 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                           () 
                   )
# 74 "Parser.fsy"
                 :  unit ));
# 582 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                          () 
                   )
# 75 "Parser.fsy"
                 :  unit ));
# 593 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                 () 
                   )
# 77 "Parser.fsy"
                 : 'local_def_list));
# 604 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'local_def_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                                () 
                   )
# 78 "Parser.fsy"
                 : 'local_def_list));
# 616 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                             () 
                   )
# 80 "Parser.fsy"
                 :  unit ));
# 628 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                                             () 
                   )
# 81 "Parser.fsy"
                 :  unit ));
# 640 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simple_stmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                         () 
                   )
# 83 "Parser.fsy"
                 :  unit ));
# 651 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                              () 
                   )
# 85 "Parser.fsy"
                 : 'simple_stmt));
# 661 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                                  () 
                   )
# 86 "Parser.fsy"
                 : 'simple_stmt));
# 673 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                  () 
                   )
# 87 "Parser.fsy"
                 : 'simple_stmt));
# 684 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                        () 
                   )
# 88 "Parser.fsy"
                 : 'simple_stmt));
# 695 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simple_stmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                                        () 
                   )
# 89 "Parser.fsy"
                 : 'simple_stmt));
# 707 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simple_stmt)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'simple_stmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                                                  () 
                   )
# 90 "Parser.fsy"
                 : 'simple_stmt));
# 720 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                                    () 
                   )
# 91 "Parser.fsy"
                 : 'simple_stmt));
# 732 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                       () 
                   )
# 92 "Parser.fsy"
                 : 'simple_stmt));
# 742 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                            () 
                   )
# 93 "Parser.fsy"
                 : 'simple_stmt));
# 753 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                       () 
                   )
# 95 "Parser.fsy"
                 : 'stmt_list));
# 764 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stmt_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                 () 
                   )
# 96 "Parser.fsy"
                 : 'stmt_list));
# 776 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                () 
                   )
# 98 "Parser.fsy"
                 :  unit ));
# 786 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stmt_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                          () 
                   )
# 99 "Parser.fsy"
                 :  unit ));
# 797 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                   () 
                   )
# 101 "Parser.fsy"
                 :  unit ));
# 808 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                             () 
                   )
# 102 "Parser.fsy"
                 :  unit ));
# 820 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                       () 
                   )
# 104 "Parser.fsy"
                 :  unit ));
# 831 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                       () 
                   )
# 105 "Parser.fsy"
                 :  unit ));
# 843 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                 () 
                   )
# 107 "Parser.fsy"
                 :  unit ));
# 854 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                  () 
                   )
# 108 "Parser.fsy"
                 :  unit ));
# 865 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                     () 
                   )
# 109 "Parser.fsy"
                 :  unit ));
# 876 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                () 
                   )
# 110 "Parser.fsy"
                 :  unit ));
# 887 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                       () 
                   )
# 111 "Parser.fsy"
                 :  unit ));
# 898 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                 () 
                   )
# 112 "Parser.fsy"
                 :  unit ));
# 909 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                  () 
                   )
# 113 "Parser.fsy"
                 :  unit ));
# 920 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                            () 
                   )
# 114 "Parser.fsy"
                 :  unit ));
# 932 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                             () 
                   )
# 115 "Parser.fsy"
                 :  unit ));
# 944 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                             () 
                   )
# 116 "Parser.fsy"
                 :  unit ));
# 956 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                             () 
                   )
# 117 "Parser.fsy"
                 :  unit ));
# 968 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                           () 
                   )
# 118 "Parser.fsy"
                 :  unit ));
# 980 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                    () 
                   )
# 120 "Parser.fsy"
                 :  unit ));
# 991 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                  () 
                   )
# 121 "Parser.fsy"
                 :  unit ));
# 1003 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                       () 
                   )
# 122 "Parser.fsy"
                 :  unit ));
# 1014 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                    () 
                   )
# 124 "Parser.fsy"
                 :  unit ));
# 1024 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                     () 
                   )
# 125 "Parser.fsy"
                 :  unit ));
# 1034 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                () 
                   )
# 126 "Parser.fsy"
                 :  unit ));
# 1045 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                      () 
                   )
# 127 "Parser.fsy"
                 :  unit ));
# 1056 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                          () 
                   )
# 128 "Parser.fsy"
                 :  unit ));
# 1068 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Parser.fsy"
                                          () 
                   )
# 129 "Parser.fsy"
                 :  unit ));
# 1080 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                          () 
                   )
# 130 "Parser.fsy"
                 :  unit ));
# 1092 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                          () 
                   )
# 131 "Parser.fsy"
                 :  unit ));
# 1104 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                          () 
                   )
# 132 "Parser.fsy"
                 :  unit ));
# 1116 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Parser.fsy"
                                          () 
                   )
# 133 "Parser.fsy"
                 :  unit ));
# 1128 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                           () 
                   )
# 134 "Parser.fsy"
                 :  unit ));
# 1140 "obj\x86\Release\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data :  unit )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Parser.fsy"
                                          () 
                   )
# 135 "Parser.fsy"
                 :  unit ));
|]
# 1153 "obj\x86\Release\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 43;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  unit  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
