0:	unit , tail, - , -
1:	par  , "Entering tail with a =" , R , -
2:	call , - , - , writeString
3:	par  , a , V , -
4:	call , - , - , writeInteger
5:	par  , " and x = " , R , -
6:	call , - , - , writeString
7:	par  , x , V , -
8:	call , - , - , writeInteger
9:	par  , ".\n" , R , -
10:	call , - , - , writeString
11:	:=   , a, - , z
12:	>    , z, x, 15
13:	jump , - , - , 22
14:	par  , z , R , -
15:	-    , x, 1, $1
16:	par  , $1 , V , -
17:	par  , $2 , RET , -
18:	call , - , - , tail
19:	:=   , $2, - , $$
20:	ret  , -, -, -
21:	<    , z, x, 24
22:	jump , - , - , 31
23:	par  , z , R , -
24:	+    , x, 1, $3
25:	par  , $3 , V , -
26:	par  , $4 , RET , -
27:	call , - , - , tail
28:	:=   , $4, - , $$
29:	ret  , -, -, -
30:	par  , "Entering else part\n" , R , -
31:	call , - , - , writeString
32:	:=   , 0, - , a
33:	:=   , 0, - , $$
34:	ret  , -, -, -
35:	endu , tail, - , -
36:	unit , weird, - , -
37:	:=   , 5, - , y
38:	par  , "Result is: " , R , -
39:	call , - , - , writeString
40:	par  , y , R , -
41:	par  , 0 , V , -
42:	par  , $5 , RET , -
43:	call , - , - , tail
44:	par  , $5 , V , -
45:	call , - , - , writeInteger
46:	par  , "\nAfter Call: " , R , -
47:	call , - , - , writeString
48:	par  , y , V , -
49:	call , - , - , writeInteger
50:	par  , "\n" , R , -
51:	call , - , - , writeString
52:	endu , weird, - , -
