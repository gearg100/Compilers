1:	unit , gorosort, - , -
2:	par  , $1 , RET , -
3:	call , - , - , readInteger
4:	:=   , $1, - , t
5:	:=   , 1, - , case
6:	<=   , case, t, (7, 35)
7:	par  , $2 , RET , -
8:	call , - , - , readInteger
9:	:=   , $2, - , n
10:	:=   , 0, - , inPlace
11:	:=   , 1, - , i
12:	<=   , i, n, (13, 21)
13:	par  , $3 , RET , -
14:	call , - , - , readInteger
15:	==   , i, $3, (16, 18)
16:	+    , inPlace, 1, $4
17:	:=   , $4, - , inPlace
18:	+    , i, 1, $5
19:	:=   , $5, - , i
20:	jump , - , - , 12
21:	par  , "Case #" , R , -
22:	call , - , - , writeString
23:	par  , case , V , -
24:	call , - , - , writeInteger
25:	par  , ": " , R , -
26:	call , - , - , writeString
27:	-    , n, inPlace, $6
28:	par  , $6 , V , -
29:	call , - , - , writeInteger
30:	par  , ".000000\n" , R , -
31:	call , - , - , writeString
32:	+    , case, 1, $7
33:	:=   , $7, - , case
34:	jump , - , - , 6
35:	endu , gorosort, - , -
